2021-01-23 22:15:34,614 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-23 22:15:34,614 - test_register.py-->line:46] - ERROR: 0 != 2
2021-01-23 22:15:34,863 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-23 22:15:34,864 - test_register.py-->line:46] - ERROR: 0 != 2
2021-01-23 22:15:34,973 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-23 22:15:35,088 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-23 22:15:35,192 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-23 22:15:35,323 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-23 22:15:35,506 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-23 22:15:35,629 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-23 22:15:35,736 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-23 22:15:35,846 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-23 22:15:35,964 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-23 22:15:36,066 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-23 22:15:36,301 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-23 22:15:36,302 - test_register.py-->line:46] - ERROR: 0 != 2
2021-01-23 22:17:12,025 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-23 22:17:12,025 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-23 22:17:13,222 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-23 22:17:13,222 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-23 22:17:13,329 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-23 22:17:13,431 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-23 22:17:13,540 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-23 22:17:13,648 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-23 22:17:13,822 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-23 22:17:13,932 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-23 22:17:14,040 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-23 22:17:14,155 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-23 22:17:14,312 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-23 22:17:14,429 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-23 22:17:14,614 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-23 22:17:14,616 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:15:52,552 - test_login.py-->line:30] - ERROR: 用例---【登录成功】---执行失败
2021-01-24 08:15:52,665 - test_login.py-->line:34] - INFO: 用例---【手机号为空】---执行通过
2021-01-24 08:15:52,767 - test_login.py-->line:34] - INFO: 用例---【密码为空】---执行通过
2021-01-24 08:15:52,963 - test_login.py-->line:34] - INFO: 用例---【手机号未注册】---执行通过
2021-01-24 08:15:53,144 - test_login.py-->line:34] - INFO: 用例---【密码错误】---执行通过
2021-01-24 08:15:53,266 - test_login.py-->line:34] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-24 08:18:38,141 - test_login.py-->line:30] - ERROR: 用例---【登录成功】---执行失败
2021-01-24 08:18:38,249 - test_login.py-->line:34] - INFO: 用例---【手机号为空】---执行通过
2021-01-24 08:18:38,356 - test_login.py-->line:34] - INFO: 用例---【密码为空】---执行通过
2021-01-24 08:18:38,470 - test_login.py-->line:34] - INFO: 用例---【手机号未注册】---执行通过
2021-01-24 08:18:38,578 - test_login.py-->line:34] - INFO: 用例---【密码错误】---执行通过
2021-01-24 08:18:38,689 - test_login.py-->line:34] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-24 08:18:38,866 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-24 08:18:38,867 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:18:39,047 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-24 08:18:39,047 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:18:39,163 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-24 08:18:39,279 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-24 08:18:39,379 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-24 08:18:39,483 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-24 08:18:39,668 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-24 08:18:39,780 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-24 08:18:39,892 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-24 08:18:40,002 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-24 08:18:40,107 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-24 08:18:40,210 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-24 08:18:40,388 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-24 08:18:40,388 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:24:17,946 - test_login.py-->line:30] - ERROR: 用例---【登录成功】---执行失败
2021-01-24 08:24:18,057 - test_login.py-->line:34] - INFO: 用例---【手机号为空】---执行通过
2021-01-24 08:24:18,166 - test_login.py-->line:34] - INFO: 用例---【密码为空】---执行通过
2021-01-24 08:24:18,274 - test_login.py-->line:34] - INFO: 用例---【手机号未注册】---执行通过
2021-01-24 08:24:18,377 - test_login.py-->line:34] - INFO: 用例---【密码错误】---执行通过
2021-01-24 08:24:18,483 - test_login.py-->line:34] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-24 08:24:18,587 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-24 08:24:18,587 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:24:18,691 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-24 08:24:18,691 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:24:18,793 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-24 08:24:18,904 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-24 08:24:19,011 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-24 08:24:19,142 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-24 08:24:19,255 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-24 08:24:19,363 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-24 08:24:19,467 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-24 08:24:19,585 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-24 08:24:19,688 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-24 08:24:19,803 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-24 08:24:19,906 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-24 08:24:19,906 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:28:05,763 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-24 08:28:05,868 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-24 08:28:05,986 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-24 08:28:06,101 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-24 08:28:06,213 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-24 08:28:06,339 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-24 08:28:06,450 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-24 08:28:06,450 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:28:06,562 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-24 08:28:06,562 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:28:06,663 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-24 08:28:06,770 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-24 08:28:06,875 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-24 08:28:06,981 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-24 08:28:07,084 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-24 08:28:07,191 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-24 08:28:07,297 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-24 08:28:07,411 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-24 08:28:07,512 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-24 08:28:07,621 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-24 08:28:07,737 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-24 08:28:07,737 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:29:32,473 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-24 08:29:32,579 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-24 08:29:32,688 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-24 08:29:32,792 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-24 08:29:32,901 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-24 08:29:33,004 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-24 08:29:33,107 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-24 08:29:33,107 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:29:33,212 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-24 08:29:33,213 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:29:33,338 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-24 08:29:33,445 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-24 08:29:33,548 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-24 08:29:33,654 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-24 08:29:33,756 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-24 08:29:33,866 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-24 08:29:33,971 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-24 08:29:34,076 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-24 08:29:34,176 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-24 08:29:34,277 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-24 08:29:34,387 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-24 08:29:34,387 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:34:43,240 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-24 08:34:43,352 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-24 08:34:43,459 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-24 08:34:43,562 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-24 08:34:43,672 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-24 08:34:43,777 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-24 08:34:43,886 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-24 08:34:43,887 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:34:43,992 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-24 08:34:43,992 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-24 08:34:44,109 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-24 08:34:44,217 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-24 08:34:44,319 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-24 08:34:44,432 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-24 08:34:44,534 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-24 08:34:44,640 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-24 08:34:44,743 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-24 08:34:44,846 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-24 08:34:44,950 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-24 08:34:45,061 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-24 08:34:45,162 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-24 08:34:45,162 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:04:18,875 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-25 06:04:19,030 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-25 06:04:19,141 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-25 06:04:19,325 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-25 06:04:19,513 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-25 06:04:19,619 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-25 06:04:19,929 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:04:19,930 - test_recharge.py-->line:72] - ERROR: 'ok' != 'OK'
- ok
+ OK
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: 'ok' != 'OK'
- ok
+ OK

2021-01-25 06:04:20,037 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:04:20,037 - test_recharge.py-->line:72] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2021-01-25 06:04:20,153 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:04:20,153 - test_recharge.py-->line:72] - ERROR: 0 != 1
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2021-01-25 06:04:20,275 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:04:20,277 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:04:20,386 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:04:20,387 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:04:20,496 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:04:20,497 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:04:20,599 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:04:20,599 - test_recharge.py-->line:72] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2021-01-25 06:04:20,702 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:04:20,916 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-25 06:04:20,916 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:04:21,113 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-25 06:04:21,114 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:04:21,229 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-25 06:04:21,340 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-25 06:04:21,446 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-25 06:04:21,560 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-25 06:04:21,784 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-25 06:04:21,894 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-25 06:04:22,009 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-25 06:04:22,123 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-25 06:04:22,229 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-25 06:04:22,329 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-25 06:04:22,550 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-25 06:04:22,551 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:10:55,081 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-25 06:10:55,202 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-25 06:10:55,311 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-25 06:10:55,500 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-25 06:10:55,729 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-25 06:10:55,835 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-25 06:10:56,182 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:10:56,293 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:10:56,293 - test_recharge.py-->line:72] - ERROR: '会员不存在' != '无权限访问，请检查参数'
- 会员不存在
+ 无权限访问，请检查参数
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '会员不存在' != '无权限访问，请检查参数'
- 会员不存在
+ 无权限访问，请检查参数

2021-01-25 06:10:56,404 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:10:56,404 - test_recharge.py-->line:72] - ERROR: 0 != 1
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2021-01-25 06:10:56,511 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:10:56,512 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:10:56,631 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:10:56,631 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:10:56,743 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:10:56,743 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:10:56,844 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:10:56,845 - test_recharge.py-->line:72] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2021-01-25 06:10:56,947 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:10:57,180 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-25 06:10:57,180 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:10:57,407 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-25 06:10:57,408 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:10:57,524 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-25 06:10:57,667 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-25 06:10:57,784 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-25 06:10:57,893 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-25 06:10:58,113 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-25 06:10:58,216 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-25 06:10:58,331 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-25 06:10:58,445 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-25 06:10:58,557 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-25 06:10:58,664 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-25 06:10:58,882 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-25 06:10:58,882 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:12:29,420 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-25 06:12:29,536 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-25 06:12:29,639 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-25 06:12:29,818 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-25 06:12:29,995 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-25 06:12:30,104 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-25 06:12:30,401 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:12:30,527 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:12:30,637 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:12:30,638 - test_recharge.py-->line:72] - ERROR: 0 != 1
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2021-01-25 06:12:30,745 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:12:30,746 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:12:30,856 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:12:30,857 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:12:30,974 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:12:30,976 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:12:31,102 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:12:31,103 - test_recharge.py-->line:72] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2021-01-25 06:12:31,206 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:12:31,378 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-25 06:12:31,379 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:12:31,557 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-25 06:12:31,557 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:12:31,659 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-25 06:12:31,769 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-25 06:12:31,870 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-25 06:12:31,973 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-25 06:12:32,141 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-25 06:12:32,249 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-25 06:12:32,357 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-25 06:12:32,492 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-25 06:12:32,607 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-25 06:12:32,715 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-25 06:12:32,897 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-25 06:12:32,898 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:13:48,622 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-25 06:13:48,739 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-25 06:13:48,843 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-25 06:13:49,015 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-25 06:13:49,194 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-25 06:13:49,305 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-25 06:13:49,583 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:13:49,688 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:13:49,801 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:13:49,801 - test_recharge.py-->line:72] - ERROR: 0 != 1
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2021-01-25 06:13:49,918 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:13:49,919 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:13:50,029 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:13:50,030 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:13:50,142 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:13:50,142 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:13:50,253 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:13:50,254 - test_recharge.py-->line:72] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2021-01-25 06:13:50,375 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:13:50,565 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-25 06:13:50,565 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:13:50,744 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-25 06:13:50,744 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:13:50,864 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-25 06:13:50,974 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-25 06:13:51,080 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-25 06:13:51,180 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-25 06:13:51,357 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-25 06:13:51,461 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-25 06:13:51,559 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-25 06:13:51,664 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-25 06:13:51,767 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-25 06:13:51,873 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-25 06:13:52,094 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-25 06:13:52,094 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:14:17,049 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-25 06:14:17,156 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-25 06:14:17,260 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-25 06:14:17,468 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-25 06:14:17,677 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-25 06:14:17,792 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-25 06:14:18,082 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:14:18,203 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:14:18,307 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:14:18,308 - test_recharge.py-->line:72] - ERROR: '会员不存在' != '用户id为空'
- 会员不存在
+ 用户id为空
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '会员不存在' != '用户id为空'
- 会员不存在
+ 用户id为空

2021-01-25 06:14:18,411 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:14:18,411 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:14:18,518 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:14:18,519 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:14:18,626 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:14:18,627 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:14:18,749 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:14:18,749 - test_recharge.py-->line:72] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2021-01-25 06:14:18,856 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:14:19,030 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-25 06:14:19,031 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:14:19,218 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-25 06:14:19,218 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:14:19,328 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-25 06:14:19,433 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-25 06:14:19,535 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-25 06:14:19,637 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-25 06:14:19,818 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-25 06:14:19,925 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-25 06:14:20,040 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-25 06:14:20,148 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-25 06:14:20,248 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-25 06:14:20,355 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-25 06:14:20,537 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-25 06:14:20,538 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:20:35,679 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-25 06:20:35,787 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-25 06:20:35,898 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-25 06:20:36,089 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-25 06:20:36,280 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-25 06:20:36,391 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-25 06:20:36,686 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:20:36,794 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:20:36,908 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:20:36,909 - test_recharge.py-->line:72] - ERROR: '会员不存在' != '用户id为空'
- 会员不存在
+ 用户id为空
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '会员不存在' != '用户id为空'
- 会员不存在
+ 用户id为空

2021-01-25 06:20:37,021 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:20:37,021 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:20:37,131 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:20:37,131 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:20:37,241 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:20:37,241 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:20:37,360 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:20:37,360 - test_recharge.py-->line:72] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2021-01-25 06:20:37,466 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:20:37,686 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-25 06:20:37,686 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:20:37,875 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-25 06:20:37,875 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:20:37,980 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-25 06:20:38,086 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-25 06:20:38,195 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-25 06:20:38,297 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-25 06:20:38,478 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-25 06:20:38,578 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-25 06:20:38,678 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-25 06:20:38,788 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-25 06:20:38,899 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-25 06:20:39,010 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-25 06:20:39,246 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-25 06:20:39,247 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:21:06,747 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-25 06:21:06,853 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-25 06:21:06,957 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-25 06:21:07,130 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-25 06:21:07,311 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-25 06:21:07,420 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-25 06:21:07,709 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:21:07,813 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:21:07,924 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:21:07,925 - test_recharge.py-->line:72] - ERROR: "'用户id为空'" != '用户id为空'
- '用户id为空'
? -      -
+ 用户id为空
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: "'用户id为空'" != '用户id为空'
- '用户id为空'
? -      -
+ 用户id为空

2021-01-25 06:21:08,027 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:21:08,027 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-25 06:21:08,136 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:21:08,137 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-25 06:21:08,264 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:21:08,371 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:21:08,475 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:21:08,475 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-25 06:21:08,650 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-25 06:21:08,650 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:21:08,823 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-25 06:21:08,823 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:21:08,931 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-25 06:21:09,036 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-25 06:21:09,143 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-25 06:21:09,260 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-25 06:21:09,450 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-25 06:21:09,570 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-25 06:21:09,677 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-25 06:21:09,783 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-25 06:21:09,894 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-25 06:21:10,015 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-25 06:21:10,198 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-25 06:21:10,199 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:23:09,363 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-25 06:23:09,483 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-25 06:23:09,588 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-25 06:23:09,771 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-25 06:23:09,953 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-25 06:23:10,055 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-25 06:23:10,383 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:23:10,489 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:23:10,605 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:23:10,719 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:23:10,721 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-25 06:23:10,844 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:23:10,844 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-25 06:23:10,960 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:23:11,068 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:23:11,172 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:23:11,172 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-25 06:23:11,398 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-25 06:23:11,398 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:23:11,584 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-25 06:23:11,584 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:23:11,700 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-25 06:23:11,814 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-25 06:23:11,921 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-25 06:23:12,030 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-25 06:23:12,200 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-25 06:23:12,318 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-25 06:23:12,427 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-25 06:23:12,534 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-25 06:23:12,649 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-25 06:23:12,754 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-25 06:23:12,975 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-25 06:23:12,975 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:26:57,324 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-25 06:26:57,448 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-25 06:26:57,564 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-25 06:26:57,744 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-25 06:26:57,919 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-25 06:26:58,023 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-25 06:26:58,338 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:26:58,451 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:26:58,570 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:26:58,681 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:26:58,682 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-25 06:26:58,790 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:26:58,791 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-25 06:26:58,893 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:26:59,011 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:26:59,011 - test_recharge.py-->line:72] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2021-01-25 06:26:59,121 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:26:59,121 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-25 06:26:59,299 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-25 06:26:59,299 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:26:59,484 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-25 06:26:59,484 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:26:59,594 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-25 06:26:59,702 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-25 06:26:59,809 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-25 06:26:59,922 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-25 06:27:00,140 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-25 06:27:00,251 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-25 06:27:00,365 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-25 06:27:00,484 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-25 06:27:00,600 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-25 06:27:00,709 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-25 06:27:00,887 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-25 06:27:00,888 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:29:34,844 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-25 06:29:34,956 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-25 06:29:35,078 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-25 06:29:35,254 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-25 06:29:35,439 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-25 06:29:35,545 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-25 06:29:35,866 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:29:35,976 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:29:36,093 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-25 06:29:36,202 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:29:36,202 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-25 06:29:36,309 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:29:36,309 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-25 06:29:36,419 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:29:36,420 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-25 06:29:36,541 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:29:36,542 - test_recharge.py-->line:72] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2021-01-25 06:29:36,662 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-25 06:29:36,663 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-25 06:29:36,857 - test_register.py-->line:44] - ERROR: 用例---【注册成功-带注册名】---执行失败
2021-01-25 06:29:36,857 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:29:37,039 - test_register.py-->line:44] - ERROR: 用例---【成功-不带用户名】---执行失败
2021-01-25 06:29:37,040 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-25 06:29:37,143 - test_register.py-->line:50] - INFO: 用例---【不输入手机号】---执行通过
2021-01-25 06:29:37,252 - test_register.py-->line:50] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-25 06:29:37,370 - test_register.py-->line:50] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-25 06:29:37,492 - test_register.py-->line:50] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-25 06:29:37,676 - test_register.py-->line:50] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-25 06:29:37,780 - test_register.py-->line:50] - INFO: 用例---【密码7位】---执行通过
2021-01-25 06:29:37,895 - test_register.py-->line:50] - INFO: 用例---【密码17位】---执行通过
2021-01-25 06:29:38,003 - test_register.py-->line:50] - INFO: 用例---【不输入密码】---执行通过
2021-01-25 06:29:38,106 - test_register.py-->line:50] - INFO: 用例---【注册名11位】---执行通过
2021-01-25 06:29:38,210 - test_register.py-->line:50] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-25 06:29:38,394 - test_register.py-->line:44] - ERROR: 用例---【不输入类型】---执行失败
2021-01-25 06:29:38,394 - test_register.py-->line:45] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_register.py", line 41, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-26 05:46:12,787 - test_register.py-->line:54] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-26 05:46:12,991 - test_register.py-->line:54] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-26 05:46:13,112 - test_register.py-->line:54] - INFO: 用例---【不输入手机号】---执行通过
2021-01-26 05:46:13,213 - test_register.py-->line:54] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-26 05:46:13,315 - test_register.py-->line:54] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-26 05:46:13,424 - test_register.py-->line:54] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-26 05:46:13,599 - test_register.py-->line:54] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-26 05:46:13,713 - test_register.py-->line:54] - INFO: 用例---【密码7位】---执行通过
2021-01-26 05:46:13,840 - test_register.py-->line:54] - INFO: 用例---【密码17位】---执行通过
2021-01-26 05:46:13,952 - test_register.py-->line:54] - INFO: 用例---【不输入密码】---执行通过
2021-01-26 05:46:14,071 - test_register.py-->line:54] - INFO: 用例---【注册名11位】---执行通过
2021-01-26 05:46:14,174 - test_register.py-->line:54] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-26 05:46:14,401 - test_register.py-->line:54] - INFO: 用例---【不输入类型】---执行通过
2021-01-26 05:46:45,881 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-26 05:46:45,997 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-26 05:46:46,101 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-26 05:46:46,277 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-26 05:46:46,456 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-26 05:46:46,567 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-26 05:46:46,853 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:46:46,957 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:46:47,060 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:46:47,159 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:46:47,159 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-26 05:46:47,268 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:46:47,268 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 05:46:47,383 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:46:47,384 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 05:46:47,488 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:46:47,489 - test_recharge.py-->line:72] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2021-01-26 05:46:47,595 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:46:47,596 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-26 05:46:47,779 - test_register.py-->line:54] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-26 05:46:47,957 - test_register.py-->line:54] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-26 05:46:48,059 - test_register.py-->line:54] - INFO: 用例---【不输入手机号】---执行通过
2021-01-26 05:46:48,165 - test_register.py-->line:54] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-26 05:46:48,271 - test_register.py-->line:54] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-26 05:46:48,381 - test_register.py-->line:54] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-26 05:46:48,565 - test_register.py-->line:54] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-26 05:46:48,666 - test_register.py-->line:54] - INFO: 用例---【密码7位】---执行通过
2021-01-26 05:46:48,770 - test_register.py-->line:54] - INFO: 用例---【密码17位】---执行通过
2021-01-26 05:46:48,885 - test_register.py-->line:54] - INFO: 用例---【不输入密码】---执行通过
2021-01-26 05:46:48,988 - test_register.py-->line:54] - INFO: 用例---【注册名11位】---执行通过
2021-01-26 05:46:49,099 - test_register.py-->line:54] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-26 05:46:49,280 - test_register.py-->line:54] - INFO: 用例---【不输入类型】---执行通过
2021-01-26 05:47:55,756 - test_register.py-->line:54] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-26 05:47:55,947 - test_register.py-->line:54] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-26 05:47:56,063 - test_register.py-->line:54] - INFO: 用例---【不输入手机号】---执行通过
2021-01-26 05:47:56,173 - test_register.py-->line:54] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-26 05:47:56,277 - test_register.py-->line:54] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-26 05:47:56,380 - test_register.py-->line:54] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-26 05:47:56,560 - test_register.py-->line:54] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-26 05:47:56,670 - test_register.py-->line:54] - INFO: 用例---【密码7位】---执行通过
2021-01-26 05:47:56,789 - test_register.py-->line:54] - INFO: 用例---【密码17位】---执行通过
2021-01-26 05:47:56,894 - test_register.py-->line:54] - INFO: 用例---【不输入密码】---执行通过
2021-01-26 05:47:57,017 - test_register.py-->line:54] - INFO: 用例---【注册名11位】---执行通过
2021-01-26 05:47:57,132 - test_register.py-->line:54] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-26 05:47:57,327 - test_register.py-->line:54] - INFO: 用例---【不输入类型】---执行通过
2021-01-26 05:52:28,485 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-26 05:52:28,595 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-26 05:52:28,701 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-26 05:52:28,884 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-26 05:52:29,067 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-26 05:52:29,175 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-26 05:52:29,473 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:52:29,579 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:52:29,684 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:52:29,788 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:52:29,789 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-26 05:52:29,899 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:52:29,899 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 05:52:30,009 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:52:30,009 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 05:52:30,117 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:52:30,118 - test_recharge.py-->line:72] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2021-01-26 05:52:30,230 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:52:30,230 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-26 05:52:30,411 - test_register.py-->line:55] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-26 05:52:30,594 - test_register.py-->line:55] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-26 05:52:30,697 - test_register.py-->line:55] - INFO: 用例---【不输入手机号】---执行通过
2021-01-26 05:52:30,798 - test_register.py-->line:55] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-26 05:52:30,903 - test_register.py-->line:55] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-26 05:52:31,012 - test_register.py-->line:55] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-26 05:52:31,190 - test_register.py-->line:55] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-26 05:52:31,301 - test_register.py-->line:55] - INFO: 用例---【密码7位】---执行通过
2021-01-26 05:52:31,409 - test_register.py-->line:55] - INFO: 用例---【密码17位】---执行通过
2021-01-26 05:52:31,517 - test_register.py-->line:55] - INFO: 用例---【不输入密码】---执行通过
2021-01-26 05:52:31,629 - test_register.py-->line:55] - INFO: 用例---【注册名11位】---执行通过
2021-01-26 05:52:31,731 - test_register.py-->line:55] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-26 05:52:31,905 - test_register.py-->line:55] - INFO: 用例---【不输入类型】---执行通过
2021-01-26 05:54:56,793 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-26 05:54:56,918 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-26 05:54:57,031 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-26 05:54:57,213 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-26 05:54:57,448 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-26 05:54:57,578 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-26 05:54:57,896 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:54:58,013 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:54:58,129 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:54:58,247 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:54:58,248 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-26 05:54:58,368 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:54:58,368 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 05:54:58,482 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:54:58,482 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 05:54:58,591 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:54:58,592 - test_recharge.py-->line:72] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2021-01-26 05:54:58,709 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:54:58,710 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-26 05:54:58,901 - test_register.py-->line:55] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-26 05:54:59,091 - test_register.py-->line:55] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-26 05:54:59,216 - test_register.py-->line:55] - INFO: 用例---【不输入手机号】---执行通过
2021-01-26 05:54:59,340 - test_register.py-->line:55] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-26 05:54:59,473 - test_register.py-->line:55] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-26 05:54:59,582 - test_register.py-->line:55] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-26 05:54:59,764 - test_register.py-->line:55] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-26 05:54:59,889 - test_register.py-->line:55] - INFO: 用例---【密码7位】---执行通过
2021-01-26 05:55:00,007 - test_register.py-->line:55] - INFO: 用例---【密码17位】---执行通过
2021-01-26 05:55:00,138 - test_register.py-->line:55] - INFO: 用例---【不输入密码】---执行通过
2021-01-26 05:55:00,249 - test_register.py-->line:55] - INFO: 用例---【注册名11位】---执行通过
2021-01-26 05:55:00,368 - test_register.py-->line:55] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-26 05:55:00,573 - test_register.py-->line:55] - INFO: 用例---【不输入类型】---执行通过
2021-01-26 05:56:49,014 - test_login.py-->line:31] - ERROR: 用例---【登录成功】---执行失败
2021-01-26 05:56:49,124 - test_login.py-->line:35] - INFO: 用例---【手机号为空】---执行通过
2021-01-26 05:56:49,248 - test_login.py-->line:35] - INFO: 用例---【密码为空】---执行通过
2021-01-26 05:56:49,429 - test_login.py-->line:35] - INFO: 用例---【手机号未注册】---执行通过
2021-01-26 05:56:49,616 - test_login.py-->line:35] - INFO: 用例---【密码错误】---执行通过
2021-01-26 05:56:49,726 - test_login.py-->line:35] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-26 05:56:50,030 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:56:50,139 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:56:50,248 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 05:56:50,356 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:56:50,357 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-26 05:56:50,477 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:56:50,477 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 05:56:50,604 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:56:50,604 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 05:56:50,716 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:56:50,717 - test_recharge.py-->line:72] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2021-01-26 05:56:50,838 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 05:56:50,838 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-26 05:56:51,014 - test_register.py-->line:55] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-26 05:56:51,194 - test_register.py-->line:55] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-26 05:56:51,302 - test_register.py-->line:55] - INFO: 用例---【不输入手机号】---执行通过
2021-01-26 05:56:51,410 - test_register.py-->line:55] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-26 05:56:51,517 - test_register.py-->line:55] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-26 05:56:51,620 - test_register.py-->line:55] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-26 05:56:51,796 - test_register.py-->line:55] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-26 05:56:51,906 - test_register.py-->line:55] - INFO: 用例---【密码7位】---执行通过
2021-01-26 05:56:52,011 - test_register.py-->line:55] - INFO: 用例---【密码17位】---执行通过
2021-01-26 05:56:52,132 - test_register.py-->line:55] - INFO: 用例---【不输入密码】---执行通过
2021-01-26 05:56:52,242 - test_register.py-->line:55] - INFO: 用例---【注册名11位】---执行通过
2021-01-26 05:56:52,346 - test_register.py-->line:55] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-26 05:56:52,528 - test_register.py-->line:55] - INFO: 用例---【不输入类型】---执行通过
2021-01-26 06:00:49,269 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 06:00:49,371 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 06:00:49,481 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 06:00:49,588 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 06:00:49,588 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-26 06:00:49,703 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 06:00:49,704 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 06:00:49,820 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 06:00:49,820 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 06:00:49,936 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 06:00:49,937 - test_recharge.py-->line:72] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2021-01-26 06:00:50,056 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 06:00:50,057 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-26 06:00:50,247 - test_register.py-->line:55] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-26 06:00:50,432 - test_register.py-->line:55] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-26 06:00:50,553 - test_register.py-->line:55] - INFO: 用例---【不输入手机号】---执行通过
2021-01-26 06:00:50,659 - test_register.py-->line:55] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-26 06:00:50,779 - test_register.py-->line:55] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-26 06:00:50,898 - test_register.py-->line:55] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-26 06:00:51,080 - test_register.py-->line:55] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-26 06:00:51,191 - test_register.py-->line:55] - INFO: 用例---【密码7位】---执行通过
2021-01-26 06:00:51,308 - test_register.py-->line:55] - INFO: 用例---【密码17位】---执行通过
2021-01-26 06:00:51,426 - test_register.py-->line:55] - INFO: 用例---【不输入密码】---执行通过
2021-01-26 06:00:51,539 - test_register.py-->line:55] - INFO: 用例---【注册名11位】---执行通过
2021-01-26 06:00:51,649 - test_register.py-->line:55] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-26 06:00:51,830 - test_register.py-->line:55] - INFO: 用例---【不输入类型】---执行通过
2021-01-26 06:08:08,995 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-01-26 06:08:09,100 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-01-26 06:08:09,213 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-01-26 06:08:09,429 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-01-26 06:08:09,612 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-01-26 06:08:09,714 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-26 06:08:10,002 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 06:08:10,103 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 06:08:10,211 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-26 06:08:10,321 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 06:08:10,321 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-26 06:08:10,425 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 06:08:10,426 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 06:08:10,537 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 06:08:10,538 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-01-26 06:08:10,650 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 06:08:10,650 - test_recharge.py-->line:72] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2021-01-26 06:08:10,765 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-26 06:08:10,765 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-26 06:08:10,949 - test_register.py-->line:55] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-26 06:08:11,139 - test_register.py-->line:55] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-26 06:08:11,240 - test_register.py-->line:55] - INFO: 用例---【不输入手机号】---执行通过
2021-01-26 06:08:11,370 - test_register.py-->line:55] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-26 06:08:11,478 - test_register.py-->line:55] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-26 06:08:11,584 - test_register.py-->line:55] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-26 06:08:11,753 - test_register.py-->line:55] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-26 06:08:11,856 - test_register.py-->line:55] - INFO: 用例---【密码7位】---执行通过
2021-01-26 06:08:11,962 - test_register.py-->line:55] - INFO: 用例---【密码17位】---执行通过
2021-01-26 06:08:12,067 - test_register.py-->line:55] - INFO: 用例---【不输入密码】---执行通过
2021-01-26 06:08:12,188 - test_register.py-->line:55] - INFO: 用例---【注册名11位】---执行通过
2021-01-26 06:08:12,298 - test_register.py-->line:55] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-26 06:08:12,473 - test_register.py-->line:55] - INFO: 用例---【不输入类型】---执行通过
2021-01-27 04:46:20,344 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-01-27 04:46:20,475 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-01-27 04:46:20,576 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-01-27 04:46:20,756 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-01-27 04:46:20,931 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-01-27 04:46:21,042 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-27 05:01:00,141 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-01-27 05:01:00,251 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-01-27 05:01:00,405 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-01-27 05:01:00,511 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-01-27 05:01:00,633 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-01-27 05:01:00,742 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-27 05:01:37,981 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-01-27 05:01:38,087 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-01-27 05:01:38,206 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-01-27 05:01:38,316 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-01-27 05:01:38,424 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-01-27 05:01:38,531 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-30 04:28:18,365 - test_register.py-->line:55] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-30 04:28:18,481 - test_register.py-->line:55] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-30 04:28:18,591 - test_register.py-->line:55] - INFO: 用例---【不输入手机号】---执行通过
2021-01-30 04:28:18,695 - test_register.py-->line:55] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-30 04:28:18,797 - test_register.py-->line:55] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-30 04:28:18,913 - test_register.py-->line:55] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-30 04:28:19,031 - test_register.py-->line:55] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-30 04:28:19,140 - test_register.py-->line:55] - INFO: 用例---【密码7位】---执行通过
2021-01-30 04:28:19,251 - test_register.py-->line:55] - INFO: 用例---【密码17位】---执行通过
2021-01-30 04:28:19,368 - test_register.py-->line:55] - INFO: 用例---【不输入密码】---执行通过
2021-01-30 04:28:19,482 - test_register.py-->line:55] - INFO: 用例---【注册名11位】---执行通过
2021-01-30 04:28:19,592 - test_register.py-->line:55] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-30 04:28:19,708 - test_register.py-->line:55] - INFO: 用例---【不输入类型】---执行通过
2021-01-30 04:32:17,464 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-01-30 04:32:17,638 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-01-30 04:32:17,754 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-01-30 04:32:17,862 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-01-30 04:32:17,979 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-01-30 04:32:18,099 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-30 04:32:18,323 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:18,323 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-30 04:32:18,432 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:18,435 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-30 04:32:18,553 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:18,554 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-30 04:32:18,669 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:18,670 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-30 04:32:18,786 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 04:32:18,901 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 04:32:19,021 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:19,021 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-01-30 04:32:19,130 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:19,131 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-01-30 04:32:19,245 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:19,246 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-30 04:32:19,365 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:19,366 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-30 04:32:19,497 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:19,497 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-01-30 04:32:19,634 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 04:32:19,767 - test_register.py-->line:55] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-30 04:32:19,877 - test_register.py-->line:55] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-30 04:32:19,980 - test_register.py-->line:55] - INFO: 用例---【不输入手机号】---执行通过
2021-01-30 04:32:20,100 - test_register.py-->line:55] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-30 04:32:20,213 - test_register.py-->line:55] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-30 04:32:20,320 - test_register.py-->line:55] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-30 04:32:20,436 - test_register.py-->line:55] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-30 04:32:20,549 - test_register.py-->line:55] - INFO: 用例---【密码7位】---执行通过
2021-01-30 04:32:20,656 - test_register.py-->line:55] - INFO: 用例---【密码17位】---执行通过
2021-01-30 04:32:20,783 - test_register.py-->line:55] - INFO: 用例---【不输入密码】---执行通过
2021-01-30 04:32:20,904 - test_register.py-->line:55] - INFO: 用例---【注册名11位】---执行通过
2021-01-30 04:32:21,016 - test_register.py-->line:55] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-30 04:32:21,135 - test_register.py-->line:55] - INFO: 用例---【不输入类型】---执行通过
2021-01-30 04:32:21,373 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:21,374 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-30 04:32:21,521 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:21,521 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-30 04:32:21,648 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:21,650 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-30 04:32:21,765 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:21,765 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-30 04:32:21,869 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:21,869 - test_withdraw.py-->line:72] - ERROR: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户id为空' != '会员id为空'
- 用户id为空
+ 会员id为空

2021-01-30 04:32:21,979 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:21,980 - test_withdraw.py-->line:72] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2021-01-30 04:32:22,089 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:22,090 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-01-30 04:32:22,209 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:22,210 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-01-30 04:32:22,315 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:22,315 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-01-30 04:32:22,424 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:22,426 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-30 04:32:22,548 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:22,549 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-01-30 04:32:22,650 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 04:32:22,650 - test_withdraw.py-->line:72] - ERROR: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '数值参数格式不正确'
- 数字格式化异常
+ 数值参数格式不正确

2021-01-30 05:42:54,346 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:42:54,347 - test_recharge.py-->line:72] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-01-30 05:42:54,466 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:42:54,467 - test_recharge.py-->line:72] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-01-30 05:42:54,581 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:42:54,582 - test_recharge.py-->line:72] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-01-30 05:42:54,696 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:42:54,697 - test_recharge.py-->line:72] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-01-30 05:42:54,805 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 05:42:54,907 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 05:42:55,015 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:42:55,015 - test_recharge.py-->line:72] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-01-30 05:42:55,141 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:42:55,141 - test_recharge.py-->line:72] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-01-30 05:42:55,261 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:42:55,262 - test_recharge.py-->line:72] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2021-01-30 05:42:55,398 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:42:55,399 - test_recharge.py-->line:72] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-01-30 05:42:55,522 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:42:55,523 - test_recharge.py-->line:72] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-01-30 05:42:55,663 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 05:45:37,758 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:45:37,759 - test_recharge.py-->line:72] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-01-30 05:45:37,877 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:45:37,878 - test_recharge.py-->line:72] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-01-30 05:45:37,995 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:45:37,996 - test_recharge.py-->line:72] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-01-30 05:45:38,104 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:45:38,104 - test_recharge.py-->line:72] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-01-30 05:45:38,215 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 05:45:38,329 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 05:45:38,438 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:45:38,438 - test_recharge.py-->line:72] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-01-30 05:45:38,560 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:45:38,560 - test_recharge.py-->line:72] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-01-30 05:45:38,666 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:45:38,666 - test_recharge.py-->line:72] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2021-01-30 05:45:38,777 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:45:38,777 - test_recharge.py-->line:72] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-01-30 05:45:38,896 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-30 05:45:38,896 - test_recharge.py-->line:72] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-01-30 05:45:39,026 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 05:46:48,439 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-01-30 05:46:48,565 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-01-30 05:46:48,684 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-01-30 05:46:48,796 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-01-30 05:46:48,899 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-01-30 05:46:49,063 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-30 07:56:37,418 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 07:56:37,521 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 07:59:03,291 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 07:59:03,425 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 08:36:04,491 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 08:36:04,599 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 08:36:47,050 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-01-30 08:36:47,154 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-01-30 08:36:47,257 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-01-30 08:36:47,393 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-01-30 08:36:47,502 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-01-30 08:36:47,613 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-30 08:36:47,827 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 08:36:47,935 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-30 08:36:48,045 - test_register.py-->line:55] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-30 08:36:48,167 - test_register.py-->line:55] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-30 08:36:48,276 - test_register.py-->line:55] - INFO: 用例---【不输入手机号】---执行通过
2021-01-30 08:36:48,438 - test_register.py-->line:55] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-30 08:36:48,566 - test_register.py-->line:55] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-30 08:36:48,678 - test_register.py-->line:55] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-30 08:36:48,781 - test_register.py-->line:55] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-30 08:36:48,884 - test_register.py-->line:55] - INFO: 用例---【密码7位】---执行通过
2021-01-30 08:36:48,986 - test_register.py-->line:55] - INFO: 用例---【密码17位】---执行通过
2021-01-30 08:36:49,092 - test_register.py-->line:55] - INFO: 用例---【不输入密码】---执行通过
2021-01-30 08:36:49,197 - test_register.py-->line:55] - INFO: 用例---【注册名11位】---执行通过
2021-01-30 08:36:49,306 - test_register.py-->line:55] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-30 08:36:49,462 - test_register.py-->line:55] - INFO: 用例---【不输入类型】---执行通过
2021-01-31 17:27:19,245 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-01-31 17:27:19,400 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-01-31 17:27:19,504 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-01-31 17:27:19,609 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-01-31 17:27:19,716 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-01-31 17:27:19,821 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-01-31 17:27:20,030 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:20,030 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-31 17:27:20,147 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:20,147 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-31 17:27:20,256 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:20,256 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-31 17:27:20,368 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:20,369 - test_recharge.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-31 17:27:20,472 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-31 17:27:20,577 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-31 17:27:20,684 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:20,685 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-01-31 17:27:20,790 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:20,790 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-01-31 17:27:20,899 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:20,899 - test_recharge.py-->line:72] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-01-31 17:27:21,019 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:21,020 - test_recharge.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-31 17:27:21,130 - test_recharge.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:21,131 - test_recharge.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-01-31 17:27:21,236 - test_recharge.py-->line:75] - INFO: 用例--【title】--成功
2021-01-31 17:27:21,346 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-01-31 17:27:21,458 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-01-31 17:27:21,562 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-01-31 17:27:21,676 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-01-31 17:27:21,778 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-01-31 17:27:21,880 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-01-31 17:27:21,986 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-01-31 17:27:22,103 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-01-31 17:27:22,211 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-01-31 17:27:22,314 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-01-31 17:27:22,426 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-01-31 17:27:22,535 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-01-31 17:27:22,643 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-01-31 17:27:22,857 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:22,858 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-31 17:27:22,973 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:22,973 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-31 17:27:23,081 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:23,081 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-31 17:27:23,190 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:23,191 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-01-31 17:27:23,301 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-01-31 17:27:23,405 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-01-31 17:27:23,512 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:23,512 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-01-31 17:27:23,624 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:23,625 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-01-31 17:27:23,739 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:23,740 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-01-31 17:27:23,861 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:23,862 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-01-31 17:27:23,966 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-01-31 17:27:23,967 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-01-31 17:27:24,072 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-01 05:54:36,713 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-01 05:54:36,820 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-01 05:54:36,927 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-01 05:54:37,038 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-01 05:54:37,144 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-01 05:54:37,247 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-01 05:54:37,486 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-01 05:54:37,594 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-01 05:54:37,702 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-01 05:54:37,817 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-01 05:54:37,924 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-01 05:54:38,028 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-01 05:54:38,139 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-01 05:54:38,256 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-01 05:54:38,358 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-01 05:54:38,464 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-01 05:54:38,571 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-01 05:54:38,674 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-01 05:54:38,785 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-01 05:54:39,000 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-01 05:54:39,001 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-01 05:54:39,116 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-01 05:54:39,117 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-01 05:54:39,223 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-01 05:54:39,223 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-01 05:54:39,328 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-01 05:54:39,328 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-01 05:54:39,446 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-01 05:54:39,553 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-01 05:54:39,659 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-01 05:54:39,660 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-01 05:54:39,771 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-01 05:54:39,771 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-01 05:54:39,884 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-01 05:54:39,884 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-01 05:54:39,998 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-01 05:54:39,999 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-01 05:54:40,106 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-01 05:54:40,106 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-01 05:54:40,210 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-02 22:03:41,671 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-02 22:03:41,862 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-02 22:03:41,975 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-02 22:03:42,099 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-02 22:03:42,234 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-02 22:03:42,365 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-02 22:03:42,630 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-02 22:03:42,759 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-02 22:03:42,880 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-02 22:03:42,983 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-02 22:03:43,103 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-02 22:03:43,216 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-02 22:03:43,343 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-02 22:03:43,461 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-02 22:03:43,568 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-02 22:03:43,709 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-02 22:03:43,842 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-02 22:03:43,950 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-02 22:03:44,075 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-02 22:03:44,302 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-02 22:03:44,303 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-02 22:03:44,429 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-02 22:03:44,429 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-02 22:03:44,541 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-02 22:03:44,542 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-02 22:03:44,665 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-02 22:03:44,665 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-02 22:03:44,783 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-02 22:03:44,894 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-02 22:03:45,010 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-02 22:03:45,010 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-02 22:03:45,140 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-02 22:03:45,140 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-02 22:03:45,255 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-02 22:03:45,255 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-02 22:03:45,369 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-02 22:03:45,369 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-02 22:03:45,487 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-02 22:03:45,487 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-02 22:03:45,597 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-03 21:11:00,214 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:00,215 - test_recharge.py-->line:87] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-03 21:11:00,561 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:00,561 - test_recharge.py-->line:87] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-03 21:11:00,876 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:00,877 - test_recharge.py-->line:87] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-03 21:11:01,191 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:01,191 - test_recharge.py-->line:87] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-03 21:11:02,134 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:02,135 - test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-03 21:11:02,448 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:02,448 - test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-03 21:11:02,764 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:02,764 - test_recharge.py-->line:87] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2021-02-03 21:11:03,072 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:03,072 - test_recharge.py-->line:87] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-02-03 21:11:03,384 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:03,384 - test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-03 21:11:19,306 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:19,306 - test_recharge.py-->line:87] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-03 21:11:19,620 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:19,620 - test_recharge.py-->line:87] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-03 21:11:19,951 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:19,951 - test_recharge.py-->line:87] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-03 21:11:20,285 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:20,286 - test_recharge.py-->line:87] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-03 21:11:21,223 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:21,223 - test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-03 21:11:21,554 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:21,554 - test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-03 21:11:21,863 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:21,863 - test_recharge.py-->line:87] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2021-02-03 21:11:22,177 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:22,177 - test_recharge.py-->line:87] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-02-03 21:11:22,508 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:11:22,508 - test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-03 21:12:41,249 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-03 21:12:41,361 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-03 21:12:41,469 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-03 21:12:41,580 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-03 21:12:41,694 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-03 21:12:41,793 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-03 21:12:42,219 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:12:42,219 - test_recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-03 21:12:42,790 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:12:42,791 - test_recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-03 21:12:44,111 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:12:44,112 - test_recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-03 21:12:44,424 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:12:44,425 - test_recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-03 21:12:45,352 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:12:45,352 - test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-03 21:12:45,660 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:12:45,661 - test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-03 21:12:46,233 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:12:46,233 - test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-03 21:12:46,538 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:12:46,539 - test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-03 21:12:46,854 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-03 21:12:46,854 - test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-03 21:12:47,554 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-03 21:12:47,665 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-03 21:12:47,774 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-03 21:12:47,887 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-03 21:12:47,991 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-03 21:12:48,093 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-03 21:12:48,211 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-03 21:12:48,319 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-03 21:12:48,428 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-03 21:12:48,530 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-03 21:12:48,649 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-03 21:12:48,758 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-03 21:12:48,883 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-03 21:12:49,125 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-03 21:12:49,125 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-03 21:12:49,253 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-03 21:12:49,254 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-03 21:12:49,354 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-03 21:12:49,354 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-03 21:12:49,456 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-03 21:12:49,457 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-03 21:12:49,562 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-03 21:12:49,675 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-03 21:12:49,775 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-03 21:12:49,776 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-03 21:12:49,885 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-03 21:12:49,886 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-03 21:12:49,999 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-03 21:12:49,999 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-03 21:12:50,122 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-03 21:12:50,123 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-03 21:12:50,232 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-03 21:12:50,232 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-03 21:12:50,335 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 05:49:13,290 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-04 05:49:13,429 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-04 05:49:13,545 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-04 05:49:13,663 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-04 05:49:13,772 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-04 05:49:13,883 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-04 05:49:14,354 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:14,356 - test_recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:49:14,699 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:14,701 - test_recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:49:15,039 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:15,040 - test_recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:49:15,348 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:15,349 - test_recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:49:15,692 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:15,692 - test_recharge.py-->line:87] - ERROR: Decimal('0.00') != 600
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != 600
2021-02-04 05:49:16,030 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:16,030 - test_recharge.py-->line:87] - ERROR: Decimal('0.00') != 600
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != 600
2021-02-04 05:49:16,425 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:16,425 - test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-04 05:49:16,975 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:16,977 - test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-04 05:49:17,536 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:17,538 - test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-04 05:49:18,096 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:18,097 - test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 05:49:18,560 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:18,562 - test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-04 05:49:19,093 - test_recharge.py-->line:86] - ERROR: 用例--【title】--失败
2021-02-04 05:49:19,095 - test_recharge.py-->line:87] - ERROR: Decimal('0.00') != '5万'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != '5万'
2021-02-04 05:49:19,243 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-04 05:49:19,475 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-04 05:49:19,606 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-04 05:49:19,710 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-04 05:49:19,818 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-04 05:49:19,938 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-04 05:49:20,073 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-04 05:49:20,186 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-04 05:49:20,304 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-04 05:49:20,414 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-04 05:49:20,521 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-04 05:49:20,631 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-04 05:49:20,749 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-04 05:49:20,973 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:49:20,973 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:49:21,086 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:49:21,087 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:49:21,195 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:49:21,195 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:49:21,298 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:49:21,299 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:49:21,412 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 05:49:21,525 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 05:49:21,639 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:49:21,639 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 05:49:21,757 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:49:21,757 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 05:49:21,868 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:49:21,868 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-04 05:49:21,984 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:49:21,986 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 05:49:22,124 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:49:22,125 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 05:49:22,253 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 05:57:38,122 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-04 05:57:38,256 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-04 05:57:38,375 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-04 05:57:38,531 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-04 05:57:38,661 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-04 05:57:38,781 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-04 05:57:39,284 - test_recharge.py-->line:92] - ERROR: 用例--【title】--失败
2021-02-04 05:57:39,284 - test_recharge.py-->line:93] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:57:39,651 - test_recharge.py-->line:92] - ERROR: 用例--【title】--失败
2021-02-04 05:57:39,651 - test_recharge.py-->line:93] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:57:39,986 - test_recharge.py-->line:92] - ERROR: 用例--【title】--失败
2021-02-04 05:57:39,987 - test_recharge.py-->line:93] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:57:40,296 - test_recharge.py-->line:92] - ERROR: 用例--【title】--失败
2021-02-04 05:57:40,297 - test_recharge.py-->line:93] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:57:40,605 - test_recharge.py-->line:96] - INFO: 用例--【title】--成功
2021-02-04 05:57:40,913 - test_recharge.py-->line:96] - INFO: 用例--【title】--成功
2021-02-04 05:57:41,225 - test_recharge.py-->line:92] - ERROR: 用例--【title】--失败
2021-02-04 05:57:41,225 - test_recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-04 05:57:41,530 - test_recharge.py-->line:92] - ERROR: 用例--【title】--失败
2021-02-04 05:57:41,533 - test_recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-04 05:57:41,840 - test_recharge.py-->line:92] - ERROR: 用例--【title】--失败
2021-02-04 05:57:41,840 - test_recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-04 05:57:42,140 - test_recharge.py-->line:92] - ERROR: 用例--【title】--失败
2021-02-04 05:57:42,140 - test_recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 05:57:42,449 - test_recharge.py-->line:92] - ERROR: 用例--【title】--失败
2021-02-04 05:57:42,450 - test_recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-04 05:57:42,759 - test_recharge.py-->line:96] - INFO: 用例--【title】--成功
2021-02-04 05:57:42,881 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-04 05:57:42,992 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-04 05:57:43,098 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-04 05:57:43,204 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-04 05:57:43,314 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-04 05:57:43,420 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-04 05:57:43,541 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-04 05:57:43,648 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-04 05:57:43,763 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-04 05:57:43,881 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-04 05:57:43,997 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-04 05:57:44,103 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-04 05:57:44,226 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-04 05:57:44,462 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:57:44,463 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:57:44,577 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:57:44,577 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:57:44,682 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:57:44,682 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:57:44,795 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:57:44,796 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 05:57:44,898 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 05:57:44,997 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 05:57:45,108 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:57:45,109 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 05:57:45,218 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:57:45,218 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 05:57:45,322 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:57:45,322 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-04 05:57:45,429 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:57:45,431 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 05:57:45,541 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 05:57:45,542 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 05:57:45,651 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:34:43,627 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:34:43,631 - test_recharge.py-->line:92] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-04 20:34:43,958 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:34:43,958 - test_recharge.py-->line:92] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-04 20:34:44,276 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:34:44,276 - test_recharge.py-->line:92] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-04 20:34:44,586 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:34:44,586 - test_recharge.py-->line:92] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-04 20:34:44,915 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:34:45,249 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:34:45,580 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:34:45,580 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-04 20:34:45,904 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:34:45,906 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-04 20:34:46,240 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:34:46,240 - test_recharge.py-->line:92] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2021-02-04 20:34:46,581 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:34:46,582 - test_recharge.py-->line:92] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-02-04 20:34:46,917 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:34:46,919 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-04 20:34:47,285 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:36:18,363 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-04 20:36:18,470 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-04 20:36:18,576 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-04 20:36:18,690 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-04 20:36:18,811 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-04 20:36:18,928 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-04 20:36:19,378 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:36:19,379 - test_recharge.py-->line:92] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:36:19,707 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:36:19,708 - test_recharge.py-->line:92] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:36:20,021 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:36:20,021 - test_recharge.py-->line:92] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:36:20,381 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:36:20,381 - test_recharge.py-->line:92] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:36:20,757 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:36:21,115 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:36:21,464 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:36:21,465 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-04 20:36:21,813 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:36:21,813 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-04 20:36:22,138 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:36:22,139 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-04 20:36:22,489 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:36:22,490 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 20:36:22,843 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:36:22,844 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常

2021-02-04 20:36:23,188 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:36:23,303 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-04 20:36:23,434 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-04 20:36:23,546 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-04 20:36:23,656 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-04 20:36:23,766 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-04 20:36:23,911 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-04 20:36:24,034 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-04 20:36:24,163 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-04 20:36:24,273 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-04 20:36:24,408 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-04 20:36:24,520 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-04 20:36:24,625 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-04 20:36:24,743 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-04 20:36:24,976 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:36:24,976 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:36:25,093 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:36:25,094 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:36:25,226 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:36:25,227 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:36:25,345 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:36:25,345 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:36:25,465 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:36:25,578 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:36:25,701 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:36:25,702 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:36:25,810 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:36:25,810 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:36:25,921 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:36:25,921 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-04 20:36:26,037 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:36:26,038 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 20:36:26,155 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:36:26,156 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:36:26,268 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:39:40,290 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:39:40,290 - test_recharge.py-->line:92] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-04 20:39:40,620 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:39:40,620 - test_recharge.py-->line:92] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-04 20:39:40,942 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:39:40,942 - test_recharge.py-->line:92] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-04 20:39:41,285 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:39:41,286 - test_recharge.py-->line:92] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-04 20:39:41,620 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:39:41,954 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:39:42,280 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:39:42,280 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-04 20:39:42,608 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:39:42,608 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-04 20:39:42,943 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:39:42,943 - test_recharge.py-->line:92] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2021-02-04 20:39:43,278 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:39:43,278 - test_recharge.py-->line:92] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-02-04 20:39:43,601 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:39:43,601 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数字格式化异常'
- 金额必须大于0并且小于或者等于500000
+ 数字格式化异常


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数字格式化异常
2021-02-04 20:39:43,933 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:47:48,782 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:47:48,782 - test_recharge.py-->line:92] - ERROR:  :: 600.0 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 600.0 != 0
2021-02-04 20:47:49,126 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:47:49,127 - test_recharge.py-->line:92] - ERROR:  :: 600.1 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 600.1 != 0
2021-02-04 20:47:49,469 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:47:49,470 - test_recharge.py-->line:92] - ERROR:  :: 600.22 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 600.22 != 0
2021-02-04 20:47:49,809 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:47:49,809 - test_recharge.py-->line:92] - ERROR:  :: 500000.0 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 500000.0 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 500000.0 != 0
2021-02-04 20:47:50,156 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:47:50,519 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:47:50,855 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:47:50,856 - test_recharge.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2021-02-04 20:47:51,197 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:47:51,197 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2021-02-04 20:47:51,528 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:47:51,529 - test_recharge.py-->line:92] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2021-02-04 20:47:51,875 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:47:51,875 - test_recharge.py-->line:92] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-02-04 20:47:52,221 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:47:52,222 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2021-02-04 20:47:52,579 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:48:43,056 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-04 20:48:43,165 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-04 20:48:43,280 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-04 20:48:43,400 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-04 20:48:43,530 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-04 20:48:43,640 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-04 20:48:44,092 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:48:44,092 - test_recharge.py-->line:92] - ERROR: 600.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != 0
2021-02-04 20:48:44,424 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:48:44,425 - test_recharge.py-->line:92] - ERROR: 600.1 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != 0
2021-02-04 20:48:44,771 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:48:44,772 - test_recharge.py-->line:92] - ERROR: 600.22 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != 0
2021-02-04 20:48:45,143 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:48:45,143 - test_recharge.py-->line:92] - ERROR: 500000.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 500000.0 != 0
2021-02-04 20:48:45,487 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:48:45,828 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:48:46,203 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:48:46,203 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-04 20:48:46,521 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:48:46,521 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-04 20:48:46,894 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:48:46,894 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-04 20:48:47,227 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:48:47,227 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 20:48:47,580 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:48:47,581 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-04 20:48:47,914 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:48:48,067 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-04 20:48:48,204 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-04 20:48:48,320 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-04 20:48:48,438 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-04 20:48:48,546 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-04 20:48:48,652 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-04 20:48:48,782 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-04 20:48:48,894 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-04 20:48:49,001 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-04 20:48:49,110 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-04 20:48:49,220 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-04 20:48:49,341 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-04 20:48:49,465 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-04 20:48:49,697 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:48:49,698 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:48:49,826 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:48:49,827 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:48:49,954 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:48:49,955 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:48:50,073 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:48:50,074 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:48:50,183 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:48:50,296 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:48:50,402 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:48:50,402 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:48:50,521 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:48:50,521 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:48:50,626 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:48:50,627 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-04 20:48:50,732 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:48:50,732 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 20:48:50,835 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:48:50,835 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:48:50,946 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:49:37,246 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-04 20:49:37,354 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-04 20:49:37,465 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-04 20:49:37,598 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-04 20:49:37,730 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-04 20:49:38,088 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-04 20:49:38,545 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:49:38,545 - test_recharge.py-->line:92] - ERROR: 600.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != 0
2021-02-04 20:49:38,878 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:49:38,879 - test_recharge.py-->line:92] - ERROR: 600.1 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != 0
2021-02-04 20:49:39,206 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:49:39,207 - test_recharge.py-->line:92] - ERROR: 600.22 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != 0
2021-02-04 20:49:39,543 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:49:39,543 - test_recharge.py-->line:92] - ERROR: 500000.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 500000.0 != 0
2021-02-04 20:49:39,864 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:49:40,194 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:49:40,531 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:49:40,531 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-04 20:49:40,859 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:49:40,860 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-04 20:49:41,186 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:49:41,186 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-04 20:49:41,520 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:49:41,520 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 20:49:41,836 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:49:41,837 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-04 20:49:42,174 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:49:42,313 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-04 20:49:42,438 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-04 20:49:42,542 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-04 20:49:42,660 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-04 20:49:42,767 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-04 20:49:42,878 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-04 20:49:42,994 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-04 20:49:43,105 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-04 20:49:43,212 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-04 20:49:43,321 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-04 20:49:43,426 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-04 20:49:43,531 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-04 20:49:43,652 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-04 20:49:43,888 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:49:43,889 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:49:44,000 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:49:44,000 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:49:44,108 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:49:44,108 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:49:44,218 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:49:44,218 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:49:44,331 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:49:44,441 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:49:44,550 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:49:44,551 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:49:44,657 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:49:44,657 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:49:44,762 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:49:44,763 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-04 20:49:44,891 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:49:44,891 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 20:49:44,995 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:49:44,996 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:49:45,098 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:52:19,117 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-04 20:52:19,241 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-04 20:52:19,351 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-04 20:52:19,478 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-04 20:52:19,609 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-04 20:52:19,715 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-04 20:52:20,177 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:52:20,177 - test_recharge.py-->line:92] - ERROR: 600.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != 0
2021-02-04 20:52:20,515 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:52:20,515 - test_recharge.py-->line:92] - ERROR: 600.1 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != 0
2021-02-04 20:52:20,857 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:52:20,857 - test_recharge.py-->line:92] - ERROR: 600.22 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != 0
2021-02-04 20:52:21,195 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:52:21,195 - test_recharge.py-->line:92] - ERROR: 500000.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount-start_amount),0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 500000.0 != 0
2021-02-04 20:52:21,525 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:52:21,867 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:52:22,467 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:52:22,469 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-04 20:52:22,815 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:52:22,815 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-04 20:52:23,164 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:52:23,164 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-04 20:52:23,567 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:52:23,568 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 20:52:23,913 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-04 20:52:23,913 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-04 20:52:24,234 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-04 20:52:24,359 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-04 20:52:24,500 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-04 20:52:24,609 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-04 20:52:24,727 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-04 20:52:24,827 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-04 20:52:24,927 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-04 20:52:25,044 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-04 20:52:25,147 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-04 20:52:25,251 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-04 20:52:25,359 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-04 20:52:25,473 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-04 20:52:25,581 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-04 20:52:25,710 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-04 20:52:25,968 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:52:25,968 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:52:26,091 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:52:26,092 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:52:26,212 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:52:26,213 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:52:26,327 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:52:26,327 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-04 20:52:26,427 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:52:26,533 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-04 20:52:26,643 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:52:26,643 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:52:26,753 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:52:26,753 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:52:26,876 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:52:26,876 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-04 20:52:27,034 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:52:27,036 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-04 20:52:27,165 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-04 20:52:27,166 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-04 20:52:27,282 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 05:16:48,706 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-06 05:16:48,884 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-06 05:16:48,986 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-06 05:16:49,097 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-06 05:16:49,225 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-06 05:16:49,350 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-06 05:16:49,815 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:16:49,816 - test_recharge.py-->line:92] - ERROR: 600.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != 0
2021-02-06 05:16:50,162 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:16:50,162 - test_recharge.py-->line:92] - ERROR: 600.1 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != 0
2021-02-06 05:16:50,483 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:16:50,483 - test_recharge.py-->line:92] - ERROR: 600.22 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != 0
2021-02-06 05:16:50,792 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:16:50,792 - test_recharge.py-->line:92] - ERROR: 500000.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 500000.0 != 0
2021-02-06 05:16:51,106 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 05:16:51,444 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 05:16:51,760 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:16:51,761 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-06 05:16:52,081 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:16:52,081 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 05:16:52,397 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:16:52,397 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-06 05:16:52,719 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:16:52,719 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 05:16:53,034 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:16:53,034 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 05:16:53,366 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 05:16:53,510 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-06 05:16:53,633 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-06 05:16:53,751 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-06 05:16:53,865 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-06 05:16:53,970 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-06 05:16:54,079 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-06 05:16:54,193 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-06 05:16:54,312 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-06 05:16:54,421 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-06 05:16:54,547 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-06 05:16:54,644 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-06 05:16:54,743 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-06 05:16:54,863 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-06 05:16:55,087 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 05:16:55,088 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 05:16:55,206 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 05:16:55,206 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 05:16:55,315 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 05:16:55,316 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 05:16:55,439 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 05:16:55,440 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 05:16:55,566 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 05:16:55,679 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 05:16:55,789 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 05:16:55,790 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 05:16:55,903 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 05:16:55,904 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 05:16:56,015 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 05:16:56,015 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-06 05:16:56,132 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 05:16:56,133 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 05:16:56,247 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 05:16:56,248 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 05:16:56,368 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 05:18:13,839 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:18:13,840 - test_recharge.py-->line:92] - ERROR:  :: 600.0 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 600.0 != 0
2021-02-06 05:18:14,183 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:18:14,183 - test_recharge.py-->line:92] - ERROR:  :: 600.1 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 600.1 != 0
2021-02-06 05:18:14,511 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:18:14,511 - test_recharge.py-->line:92] - ERROR:  :: 600.22 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 600.22 != 0
2021-02-06 05:18:14,862 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:18:14,863 - test_recharge.py-->line:92] - ERROR:  :: 500000.0 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 500000.0 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 500000.0 != 0
2021-02-06 05:18:15,207 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 05:18:15,523 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 05:18:15,854 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:18:15,855 - test_recharge.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2021-02-06 05:18:16,187 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:18:16,187 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2021-02-06 05:18:16,507 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:18:16,507 - test_recharge.py-->line:92] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2021-02-06 05:18:16,846 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:18:16,846 - test_recharge.py-->line:92] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-02-06 05:18:17,187 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 05:18:17,188 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2021-02-06 05:18:17,517 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 16:39:02,156 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-06 16:39:02,319 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-06 16:39:02,435 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-06 16:39:02,586 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-06 16:39:02,751 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-06 16:39:02,864 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-06 16:39:03,367 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 16:39:03,367 - test_recharge.py-->line:92] - ERROR: 600.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != 0
2021-02-06 16:39:03,736 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 16:39:03,736 - test_recharge.py-->line:92] - ERROR: 600.1 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != 0
2021-02-06 16:39:04,079 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 16:39:04,079 - test_recharge.py-->line:92] - ERROR: 600.22 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != 0
2021-02-06 16:39:04,436 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 16:39:04,436 - test_recharge.py-->line:92] - ERROR: 500000.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 500000.0 != 0
2021-02-06 16:39:04,794 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 16:39:05,124 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 16:39:05,471 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 16:39:05,472 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-06 16:39:05,823 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 16:39:05,823 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 16:39:06,153 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 16:39:06,154 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-06 16:39:06,494 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 16:39:06,495 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 16:39:06,834 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 16:39:06,834 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 16:39:07,194 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 16:39:07,337 - test_register.py-->line:57] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-06 16:39:07,482 - test_register.py-->line:57] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-06 16:39:07,592 - test_register.py-->line:57] - INFO: 用例---【不输入手机号】---执行通过
2021-02-06 16:39:07,721 - test_register.py-->line:57] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-06 16:39:07,831 - test_register.py-->line:57] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-06 16:39:07,933 - test_register.py-->line:57] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-06 16:39:08,074 - test_register.py-->line:57] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-06 16:39:08,186 - test_register.py-->line:57] - INFO: 用例---【密码7位】---执行通过
2021-02-06 16:39:08,293 - test_register.py-->line:57] - INFO: 用例---【密码17位】---执行通过
2021-02-06 16:39:08,397 - test_register.py-->line:57] - INFO: 用例---【不输入密码】---执行通过
2021-02-06 16:39:08,510 - test_register.py-->line:57] - INFO: 用例---【注册名11位】---执行通过
2021-02-06 16:39:08,622 - test_register.py-->line:57] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-06 16:39:08,758 - test_register.py-->line:57] - INFO: 用例---【不输入类型】---执行通过
2021-02-06 16:39:09,005 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 16:39:09,006 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 16:39:09,127 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 16:39:09,127 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 16:39:09,249 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 16:39:09,249 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 16:39:09,364 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 16:39:09,364 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 16:39:09,470 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 16:39:09,577 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 16:39:09,685 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 16:39:09,686 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 16:39:09,805 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 16:39:09,806 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 16:39:09,919 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 16:39:09,919 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-06 16:39:10,023 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 16:39:10,023 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 16:39:10,133 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 16:39:10,134 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 16:39:10,241 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:02:56,302 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-06 17:02:56,469 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-06 17:02:56,578 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-06 17:02:56,687 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-06 17:02:56,796 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-06 17:02:56,902 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-06 17:02:57,044 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-06 17:02:57,150 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-06 17:02:57,256 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-06 17:02:57,367 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-06 17:02:57,477 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-06 17:02:57,592 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-06 17:02:57,733 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-06 17:03:24,077 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-06 17:03:24,182 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-06 17:03:24,284 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-06 17:03:24,421 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-06 17:03:24,565 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-06 17:03:24,668 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-06 17:03:25,190 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:03:25,191 - test_recharge.py-->line:92] - ERROR: 600.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != 0
2021-02-06 17:03:25,561 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:03:25,561 - test_recharge.py-->line:92] - ERROR: 600.1 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != 0
2021-02-06 17:03:25,946 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:03:25,946 - test_recharge.py-->line:92] - ERROR: 600.22 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != 0
2021-02-06 17:03:26,314 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:03:26,314 - test_recharge.py-->line:92] - ERROR: 500000.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 500000.0 != 0
2021-02-06 17:03:26,728 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:03:27,137 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:03:27,531 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:03:27,532 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-06 17:03:27,900 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:03:27,900 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 17:03:28,241 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:03:28,242 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-06 17:03:28,585 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:03:28,586 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 17:03:28,941 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:03:28,941 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 17:03:29,291 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:03:29,426 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-06 17:03:29,573 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-06 17:03:29,679 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-06 17:03:29,784 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-06 17:03:29,898 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-06 17:03:30,006 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-06 17:03:30,136 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-06 17:03:30,238 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-06 17:03:30,341 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-06 17:03:30,442 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-06 17:03:30,548 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-06 17:03:30,651 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-06 17:03:30,795 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-06 17:03:31,043 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:03:31,043 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:03:31,148 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:03:31,148 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:03:31,254 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:03:31,254 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:03:31,362 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:03:31,362 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:03:31,467 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:03:31,567 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:03:31,674 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:03:31,674 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:03:31,783 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:03:31,783 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:03:31,892 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:03:31,893 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-06 17:03:32,002 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:03:32,002 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 17:03:32,111 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:03:32,111 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:03:32,213 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:08:55,665 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-06 17:08:55,772 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-06 17:08:55,877 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-06 17:08:56,014 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-06 17:08:56,159 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-06 17:08:56,265 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-06 17:08:56,764 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:08:56,764 - test_recharge.py-->line:92] - ERROR: 600.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != 0
2021-02-06 17:08:57,134 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:08:57,134 - test_recharge.py-->line:92] - ERROR: 600.1 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != 0
2021-02-06 17:08:57,487 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:08:57,488 - test_recharge.py-->line:92] - ERROR: 600.22 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != 0
2021-02-06 17:08:57,835 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:08:57,835 - test_recharge.py-->line:92] - ERROR: 500000.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 500000.0 != 0
2021-02-06 17:08:58,170 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:08:58,523 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:08:58,858 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:08:58,858 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-06 17:08:59,198 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:08:59,198 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 17:08:59,537 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:08:59,538 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-06 17:08:59,870 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:08:59,871 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 17:09:00,226 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:09:00,226 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 17:09:00,572 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:09:00,709 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-06 17:09:00,842 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-06 17:09:00,945 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-06 17:09:01,049 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-06 17:09:01,158 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-06 17:09:01,264 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-06 17:09:01,395 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-06 17:09:01,503 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-06 17:09:01,606 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-06 17:09:01,707 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-06 17:09:01,818 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-06 17:09:01,922 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-06 17:09:02,070 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-06 17:09:02,326 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:09:02,327 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:09:02,443 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:09:02,443 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:09:02,565 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:09:02,565 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:09:02,676 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:09:02,676 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:09:02,795 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:09:02,903 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:09:03,005 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:09:03,006 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:09:03,133 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:09:03,133 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:09:03,252 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:09:03,252 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-06 17:09:03,366 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:09:03,366 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 17:09:03,482 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:09:03,482 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:09:03,600 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:35:27,382 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-06 17:35:27,510 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-06 17:35:27,621 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-06 17:35:27,762 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-06 17:35:27,901 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-06 17:35:28,021 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-06 17:35:28,551 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:35:28,552 - test_recharge.py-->line:92] - ERROR: 600.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != 0
2021-02-06 17:35:28,907 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:35:28,908 - test_recharge.py-->line:92] - ERROR: 600.1 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != 0
2021-02-06 17:35:29,268 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:35:29,268 - test_recharge.py-->line:92] - ERROR: 600.22 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.22 != 0
2021-02-06 17:35:29,641 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:35:29,642 - test_recharge.py-->line:92] - ERROR: 500000.0 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 89, in test_recharge
    self.assertEqual(float(end_amount - start_amount), 0)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 500000.0 != 0
2021-02-06 17:35:29,997 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:35:30,373 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:35:30,726 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:35:30,727 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-06 17:35:31,125 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:35:31,127 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 17:35:31,473 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:35:31,474 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-06 17:35:31,830 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:35:31,830 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 17:35:32,201 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:35:32,202 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 17:35:32,564 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:35:32,708 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-06 17:35:32,857 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-06 17:35:32,976 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-06 17:35:33,095 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-06 17:35:33,225 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-06 17:35:33,347 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-06 17:35:33,495 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-06 17:35:33,615 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-06 17:35:33,763 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-06 17:35:33,966 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-06 17:49:32,085 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-06 17:49:32,187 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-06 17:49:32,289 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-06 17:49:32,419 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-06 17:49:32,548 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-06 17:49:32,649 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-06 17:49:34,513 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:49:34,845 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:49:35,187 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:49:35,187 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-06 17:49:35,532 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:49:35,532 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 17:49:35,862 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:49:35,862 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-06 17:49:36,194 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:49:36,194 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 17:49:36,524 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:49:36,524 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 17:49:36,858 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:49:36,992 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-06 17:49:37,137 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-06 17:49:37,243 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-06 17:49:37,350 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-06 17:49:37,452 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-06 17:49:37,555 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-06 17:49:37,684 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-06 17:49:37,790 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-06 17:49:37,893 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-06 17:49:37,994 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-06 17:49:38,096 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-06 17:49:38,200 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-06 17:49:38,332 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-06 17:49:38,596 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:49:38,597 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:49:38,700 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:49:38,700 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:49:38,800 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:49:38,800 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:49:38,907 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:49:38,907 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:49:39,014 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:49:39,117 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:49:39,225 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:49:39,226 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:49:39,334 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:49:39,334 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:49:39,440 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:49:39,440 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-06 17:49:39,541 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:49:39,541 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 17:49:39,645 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:49:39,645 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:49:39,748 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:52:24,906 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-06 17:52:25,018 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-06 17:52:25,121 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-06 17:52:25,244 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-06 17:52:25,376 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-06 17:52:25,479 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-06 17:52:25,959 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:52:26,305 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:52:26,679 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:52:27,015 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:52:27,345 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:52:27,676 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:52:28,009 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:52:28,009 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-06 17:52:28,331 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:52:28,332 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 17:52:28,679 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:52:28,680 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-06 17:52:29,011 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:52:29,012 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 17:52:29,348 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 17:52:29,348 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 17:52:29,670 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 17:52:29,809 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-06 17:52:29,958 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-06 17:52:30,059 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-06 17:52:30,166 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-06 17:52:30,269 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-06 17:52:30,378 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-06 17:52:30,509 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-06 17:52:30,613 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-06 17:52:30,717 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-06 17:52:30,821 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-06 17:52:30,921 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-06 17:52:31,035 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-06 17:52:31,170 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-06 17:52:31,400 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:52:31,400 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:52:31,504 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:52:31,504 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:52:31,606 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:52:31,606 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:52:31,708 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:52:31,708 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 17:52:31,812 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:52:31,913 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 17:52:32,016 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:52:32,016 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:52:32,127 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:52:32,127 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:52:32,238 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:52:32,238 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-06 17:52:32,339 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:52:32,339 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 17:52:32,444 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 17:52:32,444 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 17:52:32,548 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 20:15:22,616 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-06 20:15:22,961 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-06 20:15:23,226 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-06 20:15:23,827 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-06 20:15:24,083 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-06 20:15:24,237 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-06 20:15:25,476 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:15:26,210 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:15:27,204 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:15:28,258 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:15:29,182 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:15:29,829 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:15:30,890 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 20:15:30,890 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-06 20:15:31,424 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 20:15:31,424 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 20:15:33,138 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 20:15:33,139 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-06 20:15:33,778 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 20:15:33,779 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 20:15:34,364 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 20:15:34,364 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 20:15:34,860 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:15:35,053 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-06 20:15:35,261 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-06 20:15:35,489 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-06 20:15:35,637 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-06 20:15:35,838 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-06 20:15:35,975 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-06 20:15:36,170 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-06 20:15:36,557 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-06 20:15:36,686 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-06 20:15:36,813 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-06 20:15:37,056 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-06 20:15:37,204 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-06 20:15:37,460 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-06 20:15:37,858 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:15:37,858 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 20:15:38,000 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:15:38,000 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 20:15:38,296 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:15:38,297 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 20:15:38,462 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:15:38,462 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 20:15:38,592 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 20:15:38,722 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 20:15:38,844 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:15:38,844 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 20:15:38,979 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:15:38,980 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 20:15:39,113 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:15:39,113 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-06 20:15:39,252 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:15:39,252 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 20:15:39,405 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:15:39,406 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 20:15:39,552 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 20:24:43,765 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-06 20:24:43,884 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-06 20:24:43,987 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-06 20:24:44,122 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-06 20:24:44,252 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-06 20:24:44,363 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-06 20:24:44,838 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:24:45,179 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:24:45,520 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:24:45,861 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:24:46,207 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:24:46,602 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:24:46,954 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 20:24:46,954 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-06 20:24:47,310 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 20:24:47,311 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 20:24:47,655 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 20:24:47,655 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-06 20:24:48,008 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 20:24:48,008 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-06 20:24:48,345 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-06 20:24:48,345 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-06 20:24:48,679 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-06 20:24:48,811 - test_register.py-->line:56] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-06 20:24:48,944 - test_register.py-->line:56] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-06 20:24:49,058 - test_register.py-->line:56] - INFO: 用例---【不输入手机号】---执行通过
2021-02-06 20:24:49,169 - test_register.py-->line:56] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-06 20:24:49,272 - test_register.py-->line:56] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-06 20:24:49,390 - test_register.py-->line:56] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-06 20:24:49,554 - test_register.py-->line:56] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-06 20:24:49,680 - test_register.py-->line:56] - INFO: 用例---【密码7位】---执行通过
2021-02-06 20:24:49,787 - test_register.py-->line:56] - INFO: 用例---【密码17位】---执行通过
2021-02-06 20:24:49,891 - test_register.py-->line:56] - INFO: 用例---【不输入密码】---执行通过
2021-02-06 20:24:49,996 - test_register.py-->line:56] - INFO: 用例---【注册名11位】---执行通过
2021-02-06 20:24:50,102 - test_register.py-->line:56] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-06 20:24:50,243 - test_register.py-->line:56] - INFO: 用例---【不输入类型】---执行通过
2021-02-06 20:24:50,490 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:24:50,490 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 20:24:50,598 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:24:50,598 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 20:24:50,705 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:24:50,705 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 20:24:50,812 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:24:50,812 - test_withdraw.py-->line:72] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-06 20:24:50,919 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 20:24:51,025 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 20:24:51,126 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:24:51,127 - test_withdraw.py-->line:72] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 20:24:51,236 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:24:51,237 - test_withdraw.py-->line:72] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 20:24:51,342 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 20:24:51,445 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-06 20:24:51,554 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-02-06 20:24:51,554 - test_withdraw.py-->line:72] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 69, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-06 20:24:51,670 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-02-07 06:25:55,276 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-07 06:25:55,392 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-07 06:25:55,499 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-07 06:25:55,672 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-07 06:25:55,803 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-07 06:25:55,920 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-07 06:25:56,442 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:25:56,781 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:25:57,129 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:25:57,480 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:25:57,821 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:25:58,156 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:25:58,489 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:25:58,490 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-07 06:25:58,831 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:25:58,832 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-07 06:25:59,191 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:25:59,192 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-07 06:25:59,543 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:25:59,544 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-07 06:25:59,884 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:25:59,884 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-07 06:26:00,214 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:26:00,484 - test_register.py-->line:61] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-07 06:26:00,742 - test_register.py-->line:61] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-07 06:26:00,967 - test_register.py-->line:61] - INFO: 用例---【不输入手机号】---执行通过
2021-02-07 06:26:01,209 - test_register.py-->line:61] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-07 06:26:01,444 - test_register.py-->line:61] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-07 06:26:01,722 - test_register.py-->line:61] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-07 06:26:01,980 - test_register.py-->line:61] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-07 06:26:02,238 - test_register.py-->line:61] - INFO: 用例---【密码7位】---执行通过
2021-02-07 06:26:02,496 - test_register.py-->line:61] - INFO: 用例---【密码17位】---执行通过
2021-02-07 06:26:02,765 - test_register.py-->line:61] - INFO: 用例---【不输入密码】---执行通过
2021-02-07 06:26:03,015 - test_register.py-->line:61] - INFO: 用例---【注册名11位】---执行通过
2021-02-07 06:26:03,278 - test_register.py-->line:61] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-07 06:26:03,572 - test_register.py-->line:61] - INFO: 用例---【不输入类型】---执行通过
2021-02-07 06:26:03,880 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:26:03,880 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:26:03,993 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:26:03,993 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:26:04,121 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:26:04,121 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:26:04,252 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:26:04,252 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:26:04,368 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:26:04,485 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:26:04,597 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:26:04,597 - test_withdraw.py-->line:74] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:26:04,720 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:26:04,721 - test_withdraw.py-->line:74] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:26:04,851 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:26:04,972 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:26:05,093 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:26:05,094 - test_withdraw.py-->line:74] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:26:05,214 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:36:55,412 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-07 06:36:55,548 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-07 06:36:55,666 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-07 06:36:55,821 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-07 06:36:55,955 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-07 06:36:56,078 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-07 06:36:56,622 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:36:56,981 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:36:57,336 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:36:57,680 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:36:58,016 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:36:58,403 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:36:58,766 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:36:58,766 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-07 06:36:59,115 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:36:59,116 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-07 06:36:59,492 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:36:59,494 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-07 06:36:59,897 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:36:59,898 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-07 06:37:00,261 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:37:00,263 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-07 06:37:00,633 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:37:04,339 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:37:04,339 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:37:04,457 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:37:04,458 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:37:04,594 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:37:04,596 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:37:04,710 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:37:04,710 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:37:04,817 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:37:04,921 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:37:05,040 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:37:05,040 - test_withdraw.py-->line:74] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:37:05,155 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:37:05,156 - test_withdraw.py-->line:74] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:37:05,281 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:37:05,401 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:37:05,518 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:37:05,518 - test_withdraw.py-->line:74] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:37:05,635 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:42:04,713 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-07 06:42:04,829 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-07 06:42:04,943 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-07 06:42:05,089 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-07 06:42:05,229 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-07 06:42:05,353 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-07 06:42:05,839 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:42:06,209 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:42:06,567 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:42:06,929 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:42:07,254 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:42:07,576 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:42:07,918 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:42:07,919 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-07 06:42:08,255 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:42:08,255 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-07 06:42:08,604 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:42:08,604 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-07 06:42:08,949 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:42:08,951 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-07 06:42:09,304 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:42:09,304 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-07 06:42:09,664 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:42:13,102 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:42:13,103 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:42:13,213 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:42:13,213 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:42:13,332 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:42:13,333 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:42:13,449 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:42:13,450 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:42:13,557 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:42:13,693 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:42:13,807 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:42:13,808 - test_withdraw.py-->line:74] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:42:13,912 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:42:13,912 - test_withdraw.py-->line:74] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:42:14,023 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:42:14,134 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:42:14,261 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:42:14,261 - test_withdraw.py-->line:74] - ERROR: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 余额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:42:14,382 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:50:22,906 - test_login.py-->line:32] - ERROR: 用例---【登录成功】---执行失败
2021-02-07 06:50:23,017 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-07 06:50:23,128 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-07 06:50:23,255 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-07 06:50:23,402 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-07 06:50:23,528 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-07 06:50:24,034 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:50:24,383 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:50:24,759 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:50:25,171 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:50:25,568 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:50:25,985 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:50:26,416 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:50:26,416 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-07 06:50:26,780 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:50:26,781 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-07 06:50:27,155 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:50:27,156 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-07 06:50:27,503 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:50:27,504 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-07 06:50:27,839 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-07 06:50:27,840 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-07 06:50:28,181 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-07 06:50:28,443 - test_register.py-->line:66] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-07 06:50:28,701 - test_register.py-->line:66] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-07 06:50:28,931 - test_register.py-->line:66] - INFO: 用例---【不输入手机号】---执行通过
2021-02-07 06:50:29,167 - test_register.py-->line:66] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-07 06:50:29,398 - test_register.py-->line:66] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-07 06:50:29,648 - test_register.py-->line:66] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-07 06:50:29,902 - test_register.py-->line:66] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-07 06:50:30,135 - test_register.py-->line:66] - INFO: 用例---【密码7位】---执行通过
2021-02-07 06:50:30,364 - test_register.py-->line:66] - INFO: 用例---【密码17位】---执行通过
2021-02-07 06:50:30,595 - test_register.py-->line:66] - INFO: 用例---【不输入密码】---执行通过
2021-02-07 06:50:30,819 - test_register.py-->line:66] - INFO: 用例---【注册名11位】---执行通过
2021-02-07 06:50:31,052 - test_register.py-->line:66] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-07 06:50:31,309 - test_register.py-->line:66] - INFO: 用例---【不输入类型】---执行通过
2021-02-07 06:50:31,555 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:50:31,555 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:50:31,661 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:50:31,661 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:50:31,770 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:50:31,771 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:50:31,881 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:50:31,881 - test_withdraw.py-->line:74] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-07 06:50:31,989 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:50:32,096 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-07 06:50:32,204 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:50:32,204 - test_withdraw.py-->line:74] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:50:32,325 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:50:32,325 - test_withdraw.py-->line:74] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:50:32,430 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:50:32,431 - test_withdraw.py-->line:74] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-07 06:50:32,539 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:50:32,539 - test_withdraw.py-->line:74] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-07 06:50:32,652 - test_withdraw.py-->line:73] - ERROR: 用例--【title】--失败
2021-02-07 06:50:32,652 - test_withdraw.py-->line:74] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-07 06:50:32,757 - test_withdraw.py-->line:77] - INFO: 用例--【title】--成功
2021-02-10 05:46:27,938 - test_register.py-->line:66] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-10 05:46:29,487 - test_register.py-->line:66] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-10 05:46:30,613 - test_register.py-->line:66] - INFO: 用例---【不输入手机号】---执行通过
2021-02-10 05:46:36,788 - test_register.py-->line:66] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-10 05:46:38,435 - test_register.py-->line:66] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-10 05:46:47,425 - test_register.py-->line:66] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-10 05:46:51,174 - test_register.py-->line:66] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-10 05:47:03,168 - test_register.py-->line:66] - INFO: 用例---【密码7位】---执行通过
2021-02-10 05:47:12,378 - test_register.py-->line:66] - INFO: 用例---【密码17位】---执行通过
2021-02-10 05:47:13,302 - test_register.py-->line:66] - INFO: 用例---【不输入密码】---执行通过
2021-02-10 05:47:19,081 - test_register.py-->line:66] - INFO: 用例---【注册名11位】---执行通过
2021-02-10 05:47:23,146 - test_register.py-->line:66] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-10 05:47:26,184 - test_register.py-->line:66] - INFO: 用例---【不输入类型】---执行通过
2021-02-10 05:47:44,137 - test_register.py-->line:66] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-10 05:47:45,865 - test_register.py-->line:66] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-10 05:48:19,158 - test_register.py-->line:66] - INFO: 用例---【不输入手机号】---执行通过
2021-02-10 05:48:22,114 - test_register.py-->line:66] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-10 05:48:24,992 - test_register.py-->line:66] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-10 05:48:25,524 - test_register.py-->line:66] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-10 05:48:26,073 - test_register.py-->line:66] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-10 05:48:26,664 - test_register.py-->line:66] - INFO: 用例---【密码7位】---执行通过
2021-02-10 05:48:27,793 - test_register.py-->line:66] - INFO: 用例---【密码17位】---执行通过
2021-02-10 05:48:29,017 - test_register.py-->line:66] - INFO: 用例---【不输入密码】---执行通过
2021-02-10 05:48:29,918 - test_register.py-->line:66] - INFO: 用例---【注册名11位】---执行通过
2021-02-10 05:48:31,630 - test_register.py-->line:66] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-10 05:48:34,720 - test_register.py-->line:66] - INFO: 用例---【不输入类型】---执行通过
2021-02-10 05:49:03,890 - test_register.py-->line:66] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-10 05:49:10,151 - test_register.py-->line:66] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-10 05:49:16,078 - test_register.py-->line:66] - INFO: 用例---【不输入手机号】---执行通过
2021-02-10 05:49:31,814 - test_register.py-->line:66] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-10 05:49:40,974 - test_register.py-->line:66] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-10 05:49:44,356 - test_register.py-->line:66] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-10 05:49:49,812 - test_register.py-->line:66] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-10 06:26:35,905 - test_register.py-->line:66] - INFO: 用例---【密码7位】---执行通过
2021-02-12 21:37:27,208 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-12 21:37:27,552 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-12 21:37:27,914 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-12 21:37:28,258 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-12 21:37:28,601 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-12 21:37:29,230 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-12 21:37:29,580 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-12 21:37:29,580 - test_recharge.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2021-02-12 21:37:29,968 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-12 21:37:29,969 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2021-02-12 21:37:30,318 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-12 21:37:30,319 - test_recharge.py-->line:92] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2021-02-12 21:37:30,680 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-12 21:37:30,680 - test_recharge.py-->line:92] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-02-12 21:37:31,022 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-12 21:37:31,022 - test_recharge.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2021-02-12 21:37:31,368 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-13 07:54:28,219 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:54:28,220 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 07:54:28,581 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:54:28,581 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 07:54:28,924 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:54:28,924 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 07:54:29,269 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:54:29,269 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 07:54:29,618 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 07:54:29,956 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 07:54:30,296 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:54:30,297 - test_withdraw.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
2021-02-13 07:54:30,644 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:54:30,645 - test_withdraw.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
2021-02-13 07:54:31,005 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:54:31,005 - test_withdraw.py-->line:88] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2021-02-13 07:54:31,357 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:54:31,358 - test_withdraw.py-->line:88] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-02-13 07:54:31,701 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:54:31,702 - test_withdraw.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
2021-02-13 07:54:32,044 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 07:59:49,092 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:59:49,093 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 07:59:49,456 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:59:49,456 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 07:59:49,811 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:59:49,812 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 07:59:50,190 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:59:50,190 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 07:59:50,540 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 07:59:50,887 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 07:59:51,228 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:59:51,228 - test_withdraw.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
2021-02-13 07:59:51,602 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:59:51,602 - test_withdraw.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
2021-02-13 07:59:51,964 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:59:51,964 - test_withdraw.py-->line:88] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2021-02-13 07:59:52,314 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:59:52,315 - test_withdraw.py-->line:88] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-02-13 07:59:52,669 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 07:59:52,669 - test_withdraw.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
2021-02-13 07:59:53,020 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 08:00:58,548 - test_login.py-->line:36] - INFO: 用例---【登录成功】---执行通过
2021-02-13 08:00:58,658 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-13 08:00:58,774 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-13 08:00:58,907 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-13 08:00:59,037 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-13 08:00:59,142 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-13 08:00:59,591 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-13 08:00:59,931 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-13 08:01:00,277 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-13 08:01:00,619 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-13 08:01:00,962 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-13 08:01:01,312 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-13 08:01:01,661 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-13 08:01:01,662 - test_recharge.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-13 08:01:02,025 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-13 08:01:02,025 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-13 08:01:02,374 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-13 08:01:02,375 - test_recharge.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-13 08:01:02,717 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-13 08:01:02,717 - test_recharge.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-13 08:01:03,055 - test_recharge.py-->line:91] - ERROR: 用例--【title】--失败
2021-02-13 08:01:03,055 - test_recharge.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 82, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-13 08:01:03,428 - test_recharge.py-->line:95] - INFO: 用例--【title】--成功
2021-02-13 08:01:03,687 - test_register.py-->line:65] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-13 08:01:03,964 - test_register.py-->line:65] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-13 08:01:04,197 - test_register.py-->line:65] - INFO: 用例---【不输入手机号】---执行通过
2021-02-13 08:01:04,433 - test_register.py-->line:65] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-13 08:01:04,669 - test_register.py-->line:65] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-13 08:01:04,900 - test_register.py-->line:65] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-13 08:01:05,167 - test_register.py-->line:65] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-13 08:01:05,404 - test_register.py-->line:65] - INFO: 用例---【密码7位】---执行通过
2021-02-13 08:01:05,645 - test_register.py-->line:65] - INFO: 用例---【密码17位】---执行通过
2021-02-13 08:01:05,877 - test_register.py-->line:65] - INFO: 用例---【不输入密码】---执行通过
2021-02-13 08:01:06,105 - test_register.py-->line:65] - INFO: 用例---【注册名11位】---执行通过
2021-02-13 08:01:06,351 - test_register.py-->line:65] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-13 08:01:06,617 - test_register.py-->line:65] - INFO: 用例---【不输入类型】---执行通过
2021-02-13 08:01:07,139 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:01:07,140 - test_withdraw.py-->line:88] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-13 08:01:07,475 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:01:07,475 - test_withdraw.py-->line:88] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-13 08:01:07,824 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:01:07,825 - test_withdraw.py-->line:88] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-13 08:01:08,179 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:01:08,180 - test_withdraw.py-->line:88] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-02-13 08:01:08,565 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 08:01:08,925 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 08:01:09,284 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:01:09,284 - test_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-13 08:01:09,630 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:01:09,630 - test_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-13 08:01:09,979 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:01:09,980 - test_withdraw.py-->line:88] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-13 08:01:10,324 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:01:10,324 - test_withdraw.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-13 08:01:10,687 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:01:10,687 - test_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确

2021-02-13 08:01:11,034 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 08:04:41,869 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:04:41,870 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 08:04:42,224 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:04:42,224 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 08:04:42,617 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:04:42,617 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 08:04:42,971 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:04:42,971 - test_withdraw.py-->line:88] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 82, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-13 08:04:43,333 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 08:04:44,001 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-13 08:04:44,350 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:04:44,350 - test_withdraw.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
2021-02-13 08:04:44,737 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:04:44,738 - test_withdraw.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
2021-02-13 08:04:45,103 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:04:45,103 - test_withdraw.py-->line:88] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2021-02-13 08:04:45,486 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:04:45,487 - test_withdraw.py-->line:88] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2021-02-13 08:04:45,855 - test_withdraw.py-->line:87] - ERROR: 用例--【title】--失败
2021-02-13 08:04:45,855 - test_withdraw.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '数值参数格式不正确'
- 金额必须大于0并且小于或者等于500000
+ 数值参数格式不正确


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 83, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 数值参数格式不正确
2021-02-13 08:04:46,208 - test_withdraw.py-->line:91] - INFO: 用例--【title】--成功
2021-02-17 07:08:20,283 - test_login.py-->line:36] - INFO: 用例---【登录成功】---执行通过
2021-02-17 07:08:20,407 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-17 07:08:20,528 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-17 07:08:20,681 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-17 07:08:20,839 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-17 07:08:20,957 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-17 07:10:30,491 - test_login.py-->line:36] - INFO: 用例---【登录成功】---执行通过
2021-02-17 07:10:30,660 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-17 07:10:30,769 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-17 07:10:30,909 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-17 07:10:31,051 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-17 07:10:31,173 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-17 07:12:28,939 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 07:13:11,658 - test_login.py-->line:36] - INFO: 用例---【登录成功】---执行通过
2021-02-17 07:13:11,793 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-17 07:13:11,910 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-17 07:13:12,054 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-17 07:13:12,199 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-17 07:13:12,320 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-17 07:17:35,510 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 07:20:00,320 - test_login.py-->line:36] - INFO: 用例---【登录成功】---执行通过
2021-02-17 07:20:00,434 - test_login.py-->line:36] - INFO: 用例---【手机号为空】---执行通过
2021-02-17 07:20:00,560 - test_login.py-->line:36] - INFO: 用例---【密码为空】---执行通过
2021-02-17 07:20:00,724 - test_login.py-->line:36] - INFO: 用例---【手机号未注册】---执行通过
2021-02-17 07:20:00,882 - test_login.py-->line:36] - INFO: 用例---【密码错误】---执行通过
2021-02-17 07:20:01,001 - test_login.py-->line:36] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-17 23:55:38,718 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-17 23:55:38,825 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-17 23:55:38,934 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-17 23:55:39,085 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-17 23:55:39,229 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-17 23:55:39,336 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-17 23:55:39,809 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:55:40,172 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:55:40,531 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:55:40,892 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:55:41,254 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:55:41,624 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:55:42,001 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:55:42,002 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-17 23:55:42,403 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:55:42,403 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-17 23:55:42,741 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:55:42,742 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-17 23:55:43,085 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:55:43,085 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-17 23:55:43,441 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:55:43,442 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-17 23:55:43,796 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:55:44,325 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:55:44,696 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:55:45,041 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:55:45,402 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:55:45,813 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:55:46,156 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:55:46,511 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:55:46,511 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-17 23:55:46,874 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:55:46,874 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-17 23:55:47,241 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:55:47,241 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-17 23:55:47,592 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:55:47,592 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-17 23:55:47,949 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:55:47,950 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-17 23:55:48,311 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:57:56,251 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-17 23:57:56,353 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-17 23:57:56,458 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-17 23:57:56,603 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-17 23:57:56,738 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-17 23:57:56,843 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-17 23:57:57,305 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:57:57,674 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:57:58,018 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:57:58,371 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:57:58,717 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:57:59,076 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:57:59,421 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:57:59,421 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-17 23:57:59,794 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:57:59,794 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-17 23:58:00,151 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:58:00,151 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-17 23:58:00,508 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:58:00,508 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-17 23:58:00,851 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:58:00,852 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-17 23:58:01,192 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:58:01,708 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:58:02,052 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:58:02,415 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:58:02,768 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:58:03,125 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:58:03,480 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:58:03,844 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:58:03,844 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-17 23:58:04,183 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:58:04,184 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-17 23:58:04,541 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:58:04,541 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-17 23:58:04,918 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:58:04,918 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-17 23:58:05,271 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:58:05,272 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-17 23:58:05,634 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:59:22,266 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-17 23:59:22,368 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-17 23:59:22,472 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-17 23:59:22,598 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-17 23:59:22,731 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-17 23:59:22,833 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-17 23:59:23,281 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:59:23,622 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:59:23,966 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:59:24,313 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:59:24,650 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:59:24,993 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:59:25,339 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:59:25,339 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-17 23:59:25,690 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:59:25,691 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-17 23:59:26,045 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:59:26,045 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-17 23:59:26,390 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:59:26,390 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-17 23:59:26,742 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-17 23:59:26,742 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-17 23:59:27,087 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-17 23:59:27,567 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:59:27,912 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:59:28,263 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:59:28,608 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:59:28,945 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:59:29,287 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-17 23:59:29,653 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:59:29,653 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-17 23:59:30,025 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:59:30,025 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-17 23:59:30,370 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:59:30,371 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-17 23:59:30,721 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:59:30,722 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-17 23:59:31,082 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-17 23:59:31,082 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-17 23:59:31,431 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:26:25,916 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-18 05:26:26,021 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-18 05:26:26,135 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-18 05:26:26,289 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-18 05:26:26,478 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-18 05:26:26,596 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-18 05:26:27,118 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:26:27,516 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:26:27,908 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:26:28,327 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:26:28,696 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:26:29,076 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:26:29,495 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 05:26:29,496 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-18 05:26:29,966 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 05:26:29,966 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-18 05:26:30,428 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 05:26:30,429 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-18 05:26:30,891 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 05:26:30,892 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-18 05:26:31,290 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 05:26:31,290 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-18 05:26:31,721 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:26:32,363 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:26:32,752 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:26:33,159 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:26:33,567 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:26:33,933 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:26:34,306 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:26:34,745 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 05:26:34,746 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-18 05:26:35,097 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 05:26:35,097 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-18 05:26:35,503 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 05:26:35,504 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-18 05:26:35,881 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 05:26:35,881 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-18 05:26:36,272 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 05:26:36,273 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-18 05:26:36,632 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:32:08,278 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-18 05:32:08,403 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-18 05:32:08,523 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-18 05:32:08,678 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-18 05:32:08,850 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-18 05:32:08,972 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-18 05:32:09,544 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:32:09,978 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:32:10,395 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:32:10,826 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:32:11,230 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:32:11,601 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:32:12,021 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 05:32:12,021 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-18 05:32:12,424 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 05:32:12,425 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-18 05:32:12,786 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 05:32:12,786 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-18 05:32:13,251 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 05:32:13,251 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-18 05:32:13,639 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 05:32:13,639 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-18 05:32:14,084 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 05:32:14,679 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:32:15,106 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:32:15,503 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:32:15,913 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:32:16,328 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:32:16,800 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 05:32:17,204 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 05:32:17,204 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-18 05:32:17,623 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 05:32:17,624 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-18 05:32:18,020 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 05:32:18,021 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-18 05:32:18,438 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 05:32:18,438 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-18 05:32:18,837 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 05:32:18,838 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-18 05:32:19,289 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:33:29,509 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-18 06:33:29,843 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-18 06:33:30,179 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-18 06:33:30,501 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-18 06:33:30,816 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-18 06:33:31,123 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-18 06:33:31,462 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-18 06:33:31,791 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-18 06:33:32,113 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-18 06:33:32,436 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-18 06:33:32,756 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-18 06:33:33,009 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-18 06:33:33,115 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-18 06:33:33,222 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-18 06:33:33,372 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-18 06:33:33,529 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-18 06:33:33,632 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-18 06:33:34,107 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:33:34,475 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:33:34,833 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:33:35,235 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:33:35,594 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:33:35,926 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:33:36,276 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 06:33:36,276 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-18 06:33:36,618 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 06:33:36,618 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-18 06:33:36,975 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 06:33:36,975 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-18 06:33:37,324 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 06:33:37,324 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-18 06:33:37,701 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 06:33:37,702 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-18 06:33:38,081 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:33:38,609 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:33:38,965 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:33:39,307 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:33:39,661 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:33:40,033 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:33:40,370 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:33:40,725 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 06:33:40,726 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-18 06:33:41,071 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 06:33:41,071 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-18 06:33:41,417 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 06:33:41,418 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-18 06:33:41,767 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 06:33:41,767 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-18 06:33:42,102 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 06:33:42,102 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-18 06:33:42,454 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:37:51,303 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-18 06:37:51,627 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-18 06:37:51,939 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-18 06:37:52,250 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-18 06:37:52,562 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-18 06:37:52,891 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-18 06:37:53,201 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-18 06:37:53,511 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-18 06:37:53,839 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-18 06:37:54,186 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-18 06:37:54,501 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-18 06:37:54,735 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-18 06:37:54,843 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-18 06:37:54,953 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-18 06:37:55,087 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-18 06:37:55,219 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-18 06:37:55,319 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-18 06:37:55,772 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:37:56,134 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:37:56,484 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:37:56,823 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:37:57,171 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:37:57,534 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:37:57,887 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 06:37:57,887 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-18 06:37:58,233 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 06:37:58,233 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-18 06:37:58,621 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 06:37:58,622 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-18 06:37:58,958 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 06:37:58,958 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-18 06:37:59,297 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-18 06:37:59,297 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-18 06:37:59,635 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-18 06:37:59,918 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-18 06:38:00,203 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-18 06:38:00,462 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-18 06:38:00,721 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-18 06:38:00,958 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-18 06:38:01,193 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-18 06:38:01,467 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-18 06:38:01,714 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-18 06:38:01,962 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-18 06:38:02,211 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-18 06:38:02,452 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-18 06:38:02,690 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-18 06:38:02,958 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-18 06:38:03,443 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:38:03,833 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:38:04,188 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:38:04,535 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:38:04,874 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:38:05,228 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-18 06:38:05,570 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 06:38:05,571 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-18 06:38:05,914 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 06:38:05,915 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-18 06:38:06,257 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 06:38:06,257 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-18 06:38:06,593 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 06:38:06,594 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-18 06:38:06,933 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-18 06:38:06,933 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-18 06:38:07,282 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-20 21:50:32,646 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-20 21:50:32,973 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-20 21:50:33,573 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-20 21:50:33,896 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-20 21:50:34,228 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-20 21:50:34,565 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-20 21:50:34,896 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-20 21:50:35,538 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-20 21:50:35,933 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-20 21:50:36,269 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-20 21:50:36,595 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-20 21:50:37,086 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-20 21:50:37,191 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-20 21:50:37,301 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-20 21:50:37,457 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-20 21:50:37,601 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-20 21:50:37,713 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-20 21:50:38,292 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-20 21:50:38,677 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-20 21:50:39,031 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-20 21:50:39,407 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-20 21:50:39,749 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-20 21:50:41,100 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-20 21:50:41,472 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-20 21:50:41,473 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-20 21:50:41,925 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-20 21:50:41,925 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-20 21:50:42,299 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-20 21:50:42,300 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-20 21:50:42,668 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-20 21:50:42,668 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-20 21:50:43,078 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-20 21:50:43,078 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-20 21:50:43,457 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-20 21:50:43,762 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-20 21:50:44,032 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-20 21:50:44,281 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-20 21:50:44,543 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-20 21:50:44,780 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-20 21:50:45,028 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-20 21:50:45,372 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-20 21:50:45,610 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-20 21:50:45,861 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-20 21:50:46,132 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-20 21:50:46,386 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-20 21:50:47,286 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-20 21:50:47,602 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-20 21:50:48,143 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-20 21:50:48,493 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-20 21:50:48,846 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-20 21:50:49,256 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-20 21:50:49,724 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-20 21:50:50,186 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-20 21:50:50,655 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-20 21:50:50,655 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-20 21:50:51,089 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-20 21:50:51,089 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-20 21:50:51,487 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-20 21:50:51,487 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-20 21:50:51,855 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-20 21:50:51,855 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-20 21:50:52,210 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-20 21:50:52,210 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-20 21:50:52,557 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:19:43,315 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-27 11:19:43,679 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-27 11:19:44,021 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-27 11:19:44,364 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-27 11:19:44,755 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-27 11:19:45,112 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-27 11:19:45,448 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-27 11:19:45,798 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-27 11:19:46,157 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-27 11:19:46,492 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-27 11:19:46,843 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-27 11:19:47,389 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-27 11:19:47,499 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-27 11:19:47,612 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-27 11:19:47,770 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-27 11:19:47,914 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-27 11:19:48,019 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-27 11:19:48,473 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:19:48,834 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:19:49,198 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:19:49,560 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:19:49,897 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:19:50,255 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:19:50,629 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 11:19:50,629 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-27 11:19:51,274 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 11:19:51,275 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-27 11:19:51,623 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 11:19:51,623 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-27 11:19:51,961 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 11:19:51,962 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-27 11:19:52,300 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 11:19:52,300 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-27 11:19:52,674 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:19:52,955 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-27 11:19:53,254 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-27 11:19:53,510 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-27 11:19:53,753 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-27 11:19:54,009 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-27 11:19:54,249 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-27 11:19:54,544 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-27 11:19:54,784 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-27 11:19:55,028 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-27 11:19:55,286 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-27 11:19:55,532 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-27 11:19:55,791 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-27 11:19:56,076 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-27 11:19:56,587 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:19:56,950 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:19:57,335 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:19:57,700 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:19:58,044 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:19:58,425 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:19:58,803 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 11:19:58,803 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-27 11:19:59,203 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 11:19:59,203 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-27 11:19:59,580 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 11:19:59,581 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-27 11:19:59,957 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 11:19:59,957 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-27 11:20:00,313 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 11:20:00,313 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-27 11:20:00,670 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:48:19,545 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-27 11:48:19,858 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-27 11:48:20,205 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-27 11:48:20,537 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-27 11:48:20,894 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-27 11:48:21,224 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-27 11:48:21,577 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-27 11:48:21,910 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-27 11:48:22,237 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-27 11:48:22,559 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-27 11:48:22,879 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-27 11:48:23,299 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-27 11:48:23,406 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-27 11:48:23,512 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-27 11:48:23,653 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-27 11:48:23,802 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-27 11:48:23,904 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-27 11:48:24,364 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:48:24,753 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:48:25,133 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:48:25,502 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:48:25,967 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:48:26,329 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:48:26,685 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 11:48:26,685 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-27 11:48:27,091 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 11:48:27,091 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-27 11:48:27,451 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 11:48:27,451 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-27 11:48:27,804 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 11:48:27,805 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-27 11:48:28,153 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 11:48:28,153 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-27 11:48:28,532 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 11:48:28,816 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-27 11:48:29,106 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-27 11:48:29,341 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-27 11:48:29,624 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-27 11:48:29,875 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-27 11:48:30,121 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-27 11:48:30,399 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-27 11:48:30,641 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-27 11:48:30,904 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-27 11:48:31,146 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-27 11:48:31,391 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-27 11:48:31,674 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-27 11:48:31,975 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-27 11:48:32,503 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:48:32,875 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:48:33,235 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:48:33,613 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:48:33,966 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:48:34,345 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 11:48:34,748 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 11:48:34,748 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-27 11:48:35,130 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 11:48:35,130 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-27 11:48:35,504 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 11:48:35,504 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-27 11:48:35,845 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 11:48:35,845 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-27 11:48:36,205 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 11:48:36,206 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-27 11:48:36,579 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:06:48,589 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-27 12:06:49,009 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-27 12:06:49,385 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-27 12:06:49,751 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-27 12:06:50,168 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-27 12:06:50,520 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-27 12:06:50,868 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-27 12:06:51,229 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-27 12:06:51,560 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-27 12:06:51,925 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-27 12:06:52,288 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-27 12:06:52,791 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-27 12:06:52,892 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-27 12:06:53,061 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-27 12:06:53,237 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-27 12:06:53,379 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-27 12:06:53,494 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-27 12:06:54,031 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:06:54,541 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:06:55,128 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:06:55,522 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:06:55,945 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:06:56,322 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:06:56,707 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 12:06:56,707 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-27 12:06:57,101 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 12:06:57,102 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-27 12:06:57,507 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 12:06:57,507 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-27 12:06:57,937 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 12:06:57,938 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-27 12:06:58,303 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 12:06:58,303 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-27 12:06:58,725 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:06:59,055 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-27 12:06:59,351 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-27 12:06:59,642 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-27 12:06:59,965 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-27 12:07:00,226 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-27 12:07:00,490 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-27 12:07:00,800 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-27 12:07:01,071 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-27 12:07:01,388 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-27 12:07:01,678 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-27 12:07:01,928 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-27 12:07:02,254 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-27 12:07:02,543 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-27 12:07:03,086 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:07:03,463 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:07:03,817 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:07:04,186 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:07:04,557 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:07:04,930 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:07:05,339 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 12:07:05,340 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-27 12:07:05,698 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 12:07:05,698 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-27 12:07:06,078 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 12:07:06,078 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-27 12:07:06,446 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 12:07:06,447 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-27 12:07:06,810 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 12:07:06,810 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-27 12:07:07,166 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:50:12,427 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-27 12:50:12,763 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-27 12:50:13,111 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-27 12:50:13,502 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-27 12:50:13,865 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-27 12:50:14,367 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-27 12:50:14,796 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-27 12:50:15,241 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-27 12:50:15,619 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-27 12:50:15,987 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-27 12:50:16,351 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-27 12:50:16,852 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-27 12:50:16,979 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-27 12:50:17,082 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-27 12:50:17,226 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-27 12:50:17,382 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-27 12:50:17,491 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-27 12:50:18,002 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:50:18,413 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:50:18,864 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:50:19,290 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:50:19,725 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:50:20,129 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:50:20,545 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 12:50:20,545 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-27 12:50:20,933 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 12:50:20,934 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-27 12:50:21,311 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 12:50:21,311 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-27 12:50:21,837 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 12:50:21,837 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-27 12:50:22,420 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-27 12:50:22,420 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-27 12:50:22,853 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-27 12:50:23,188 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-27 12:50:23,505 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-27 12:50:23,793 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-27 12:50:24,075 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-27 12:50:24,335 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-27 12:50:24,608 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-27 12:50:24,914 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-27 12:50:25,216 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-27 12:50:25,485 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-27 12:50:25,732 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-27 12:50:25,973 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-27 12:50:26,225 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-27 12:50:26,512 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-27 12:50:28,160 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:50:28,552 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:50:28,916 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:50:29,313 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:50:29,691 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:50:30,087 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-27 12:50:30,488 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 12:50:30,488 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-27 12:50:30,895 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 12:50:30,896 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-27 12:50:31,282 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 12:50:31,282 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-27 12:50:32,652 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 12:50:32,652 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-27 12:50:33,007 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-27 12:50:33,008 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-27 12:50:33,362 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:37:16,018 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-28 07:37:16,350 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-28 07:37:16,693 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-28 07:37:17,039 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-28 07:37:17,362 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-28 07:37:17,686 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-28 07:37:18,015 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-28 07:37:18,393 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-28 07:37:18,739 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-28 07:37:19,095 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-28 07:37:19,473 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-28 07:37:21,054 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-28 07:37:21,174 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-28 07:37:21,297 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-28 07:37:21,467 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-28 07:37:21,664 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-28 07:37:21,789 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-28 07:37:22,301 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:37:22,686 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:37:23,076 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:37:23,436 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:37:23,796 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:37:24,163 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:37:24,534 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 07:37:24,535 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 07:37:24,967 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 07:37:24,969 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 07:37:25,337 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 07:37:25,337 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-28 07:37:25,731 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 07:37:25,731 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 07:37:26,074 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 07:37:26,074 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 07:37:26,447 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:37:26,781 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-28 07:37:27,077 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-28 07:37:27,324 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-28 07:37:27,578 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-28 07:37:27,819 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-28 07:37:28,056 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-28 07:37:28,356 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-28 07:37:28,604 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-28 07:37:28,853 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-28 07:37:29,098 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-28 07:37:29,345 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-28 07:37:29,589 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-28 07:37:29,894 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-28 07:37:30,437 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:37:30,795 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:37:31,170 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:37:31,538 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:37:31,907 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:37:32,260 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:37:32,624 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 07:37:32,625 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 07:37:33,049 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 07:37:33,049 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 07:37:33,428 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 07:37:33,428 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-28 07:37:33,795 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 07:37:33,795 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 07:37:34,195 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 07:37:34,195 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 07:37:34,573 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:40:01,497 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-28 07:40:01,872 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-28 07:40:02,244 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-28 07:40:02,596 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-28 07:40:02,930 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-28 07:40:03,253 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-28 07:40:03,596 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-28 07:40:03,947 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-28 07:40:04,300 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-28 07:40:04,644 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-28 07:40:04,988 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-28 07:40:06,679 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-28 07:40:06,794 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-28 07:40:06,918 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-28 07:40:07,078 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-28 07:40:07,230 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-28 07:40:07,359 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-28 07:40:07,860 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:40:08,260 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:40:08,638 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:40:09,003 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:40:09,412 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:40:09,771 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:40:10,151 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 07:40:10,152 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 07:40:10,527 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 07:40:10,527 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 07:40:10,942 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 07:40:10,942 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-28 07:40:11,321 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 07:40:11,321 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 07:40:11,670 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 07:40:11,671 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 07:40:12,064 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 07:40:12,362 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-28 07:40:12,657 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-28 07:40:12,908 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-28 07:40:13,153 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-28 07:40:13,395 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-28 07:40:13,653 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-28 07:40:13,938 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-28 07:40:14,200 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-28 07:40:14,473 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-28 07:40:14,723 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-28 07:40:14,992 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-28 07:40:15,289 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-28 07:40:15,585 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-28 07:40:16,114 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:40:16,492 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:40:16,872 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:40:17,248 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:40:17,624 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:40:17,999 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:40:18,386 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 07:40:18,387 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 07:40:18,755 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 07:40:18,756 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 07:40:19,126 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 07:40:19,127 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-28 07:40:19,499 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 07:40:19,500 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 07:40:19,885 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 07:40:19,885 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 07:40:20,246 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 07:49:38,508 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-28 07:49:38,912 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-28 07:49:39,369 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-28 07:49:39,790 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-28 07:49:40,181 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-28 07:49:40,581 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-28 07:49:41,008 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-28 07:49:41,416 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-28 07:49:41,818 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-28 07:49:42,245 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-28 07:49:42,634 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-28 14:18:24,181 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-28 14:18:24,542 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-28 14:18:24,926 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-28 14:18:25,275 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-28 14:18:25,645 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-28 14:18:26,000 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-28 14:18:26,341 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-28 14:18:26,686 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-28 14:18:27,051 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-28 14:18:27,409 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-28 14:18:27,795 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-28 14:18:28,291 - test_audit.py-->line:102] - ERROR: 用例--【审核通过】---执行失败
2021-02-28 14:18:28,292 - test_audit.py-->line:103] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2021-02-28 14:18:28,539 - test_audit.py-->line:102] - ERROR: 用例--【审核不通过】---执行失败
2021-02-28 14:18:28,540 - test_audit.py-->line:103] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2021-02-28 14:18:28,881 - test_audit.py-->line:102] - ERROR: 用例--【参数approved_or_not为空】---执行失败
2021-02-28 14:18:28,882 - test_audit.py-->line:103] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2021-02-28 14:18:29,110 - test_audit.py-->line:102] - ERROR: 用例--【项目id为空】---执行失败
2021-02-28 14:18:29,110 - test_audit.py-->line:103] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2021-02-28 14:18:29,340 - test_audit.py-->line:102] - ERROR: 用例--【项目id不存在】---执行失败
2021-02-28 14:18:29,340 - test_audit.py-->line:103] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2021-02-28 14:18:29,446 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-28 14:18:29,548 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-28 14:18:29,664 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-28 14:18:29,834 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-28 14:18:30,004 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-28 14:18:30,112 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-28 14:18:30,638 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 14:18:31,040 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 14:18:31,407 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 14:18:31,785 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 14:18:32,168 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 14:18:32,537 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 14:18:32,914 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 14:18:32,915 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 14:18:33,545 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 14:18:33,546 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 14:18:33,931 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 14:18:33,931 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-28 14:18:34,303 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 14:18:34,303 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 14:18:34,692 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 14:18:34,692 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 14:18:35,060 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 14:18:35,356 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-28 14:18:35,645 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-28 14:18:35,892 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-28 14:18:36,143 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-28 14:18:36,418 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-28 14:18:36,688 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-28 14:18:36,992 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-28 14:18:37,278 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-28 14:18:37,540 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-28 14:18:37,790 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-28 14:18:38,051 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-28 14:18:38,311 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-28 14:18:38,599 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-28 14:18:39,129 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 14:18:39,497 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 14:18:39,882 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 14:18:40,261 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 14:18:40,633 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 14:18:41,036 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 14:18:41,405 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 14:18:41,405 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 14:18:41,769 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 14:18:41,770 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 14:18:42,129 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 14:18:42,129 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-28 14:18:42,523 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 14:18:42,523 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 14:18:42,898 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 14:18:42,899 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 14:18:43,259 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 16:49:43,605 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-28 16:49:43,999 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-28 16:49:44,396 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-28 16:49:44,806 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-28 16:49:45,248 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-28 16:49:45,619 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-28 16:49:46,070 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-28 16:49:46,504 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-28 16:49:46,912 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-28 16:49:47,291 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-28 16:49:47,718 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-28 17:08:32,149 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-28 17:08:32,497 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-28 17:08:32,843 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-28 17:08:33,187 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-28 17:08:33,531 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-28 17:08:33,873 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-28 17:08:34,268 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-28 17:08:34,626 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-28 17:08:34,970 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-28 17:08:35,318 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-28 17:08:35,660 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-28 17:08:36,172 - test_audit.py-->line:102] - ERROR: 用例--【审核通过】---执行失败
2021-02-28 17:08:36,172 - test_audit.py-->line:103] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2021-02-28 17:08:36,422 - test_audit.py-->line:102] - ERROR: 用例--【审核不通过】---执行失败
2021-02-28 17:08:36,422 - test_audit.py-->line:103] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2021-02-28 17:08:36,762 - test_audit.py-->line:102] - ERROR: 用例--【参数approved_or_not为空】---执行失败
2021-02-28 17:08:36,762 - test_audit.py-->line:103] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2021-02-28 17:08:36,993 - test_audit.py-->line:102] - ERROR: 用例--【项目id为空】---执行失败
2021-02-28 17:08:36,993 - test_audit.py-->line:103] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2021-02-28 17:08:37,218 - test_audit.py-->line:102] - ERROR: 用例--【项目id不存在】---执行失败
2021-02-28 17:08:37,219 - test_audit.py-->line:103] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2021-02-28 17:08:37,335 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-28 17:08:37,444 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-28 17:08:37,552 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-28 17:08:37,697 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-28 17:08:37,851 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-28 17:08:37,975 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-28 17:08:38,460 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:08:38,867 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:08:39,250 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:08:39,633 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:08:39,985 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:08:40,366 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:08:40,767 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:08:40,768 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 17:08:41,123 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:08:41,123 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 17:08:41,484 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:08:41,484 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-28 17:08:41,847 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:08:41,848 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 17:08:42,217 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:08:42,217 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 17:08:42,571 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:08:42,872 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-28 17:08:43,149 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-28 17:08:43,390 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-28 17:08:43,634 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-28 17:08:43,879 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-28 17:08:44,130 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-28 17:08:44,407 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-28 17:08:44,665 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-28 17:08:44,906 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-28 17:08:45,169 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-28 17:08:45,425 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-28 17:08:45,667 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-28 17:08:45,973 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-28 17:08:46,487 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:08:46,863 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:08:47,229 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:08:47,596 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:08:47,963 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:08:48,325 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:08:48,694 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:08:48,694 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 17:08:49,059 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:08:49,059 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 17:08:49,417 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:08:49,417 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-28 17:08:49,772 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:08:49,772 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 17:08:50,143 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:08:50,143 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 17:08:50,515 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:16:07,235 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-28 17:16:07,604 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-28 17:16:07,961 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-28 17:16:08,358 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-28 17:16:08,717 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-28 17:16:09,067 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-28 17:16:09,429 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-28 17:16:09,783 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-28 17:16:10,429 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-28 17:16:10,869 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-28 17:16:11,240 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-28 17:16:12,822 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-28 17:16:12,926 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-28 17:16:13,035 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-28 17:16:13,196 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-28 17:16:13,345 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-28 17:16:13,449 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-28 17:16:13,943 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:16:14,308 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:16:14,677 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:16:15,059 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:16:15,434 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:16:15,808 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:16:16,201 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:16:16,201 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 17:16:16,593 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:16:16,593 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 17:16:16,961 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:16:16,962 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-28 17:16:17,346 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:16:17,347 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 17:16:17,714 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:16:17,714 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 17:16:18,078 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:16:18,366 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-28 17:16:18,659 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-28 17:16:18,906 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-28 17:16:19,160 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-28 17:16:19,419 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-28 17:16:19,682 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-28 17:16:19,988 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-28 17:16:20,261 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-28 17:16:20,511 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-28 17:16:20,761 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-28 17:16:21,014 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-28 17:16:21,271 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-28 17:16:21,573 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-28 17:16:22,105 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:16:22,480 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:16:22,848 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:16:23,256 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:16:23,636 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:16:24,013 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:16:24,381 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:16:24,382 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 17:16:24,747 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:16:24,747 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 17:16:25,126 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:16:25,127 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-28 17:16:25,503 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:16:25,504 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 17:16:25,894 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:16:25,894 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 17:16:26,255 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:19:51,916 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-28 17:19:52,279 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-28 17:19:52,625 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-28 17:19:52,978 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-28 17:19:53,318 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-28 17:19:53,711 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-28 17:19:54,109 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-28 17:19:54,465 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-28 17:19:54,832 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-28 17:19:55,189 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-28 17:19:55,553 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-28 17:19:56,017 - test_audit.py-->line:102] - ERROR: 用例--【审核通过】---执行失败
2021-02-28 17:19:56,017 - test_audit.py-->line:103] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2021-02-28 17:19:56,254 - test_audit.py-->line:102] - ERROR: 用例--【审核不通过】---执行失败
2021-02-28 17:19:56,254 - test_audit.py-->line:103] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2021-02-28 17:19:56,604 - test_audit.py-->line:102] - ERROR: 用例--【参数approved_or_not为空】---执行失败
2021-02-28 17:19:56,605 - test_audit.py-->line:103] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2021-02-28 17:19:56,824 - test_audit.py-->line:102] - ERROR: 用例--【项目id为空】---执行失败
2021-02-28 17:19:56,824 - test_audit.py-->line:103] - ERROR: 1 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003
2021-02-28 17:19:57,038 - test_audit.py-->line:102] - ERROR: 用例--【项目id不存在】---执行失败
2021-02-28 17:19:57,039 - test_audit.py-->line:103] - ERROR: 2 != 1003
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_audit.py", line 92, in test_audit
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003
2021-02-28 17:19:57,143 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-28 17:19:57,257 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-28 17:19:57,373 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-28 17:19:57,550 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-28 17:19:57,698 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-28 17:19:57,804 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-28 17:19:58,283 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:19:58,649 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:19:59,026 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:19:59,428 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:19:59,849 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:20:00,241 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:20:00,611 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:20:00,611 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 17:20:01,004 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:20:01,004 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 17:20:01,366 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:20:01,367 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-28 17:20:01,749 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:20:01,749 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 17:20:02,104 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:20:02,104 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 17:20:02,506 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:20:02,794 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-28 17:20:03,095 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-28 17:20:03,343 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-28 17:20:03,594 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-28 17:20:03,841 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-28 17:20:04,087 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-28 17:20:04,395 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-28 17:20:04,643 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-28 17:20:04,904 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-28 17:20:05,171 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-28 17:20:05,423 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-28 17:20:05,676 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-28 17:20:05,974 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-28 17:20:06,485 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:20:06,858 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:20:07,221 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:20:07,575 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:20:07,949 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:20:08,341 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:20:08,738 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:20:08,738 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 17:20:09,111 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:20:09,111 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 17:20:09,464 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:20:09,466 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-28 17:20:09,824 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:20:09,824 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 17:20:10,178 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:20:10,178 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 17:20:10,519 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:25:40,972 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-28 17:25:41,323 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-28 17:25:41,728 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-28 17:25:42,091 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-28 17:25:42,444 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-28 17:25:42,789 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-28 17:25:43,148 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-28 17:25:43,530 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-28 17:25:43,899 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-28 17:25:44,253 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-28 17:25:44,615 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-28 17:25:45,180 - test_audit.py-->line:106] - INFO: 用例--【审核通过】---执行通过
2021-02-28 17:25:45,496 - test_audit.py-->line:106] - INFO: 用例--【审核不通过】---执行通过
2021-02-28 17:25:45,714 - test_audit.py-->line:106] - INFO: 用例--【项目不待审核状态】---执行通过
2021-02-28 17:25:45,954 - test_audit.py-->line:106] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-02-28 17:25:46,183 - test_audit.py-->line:106] - INFO: 用例--【项目id为空】---执行通过
2021-02-28 17:25:46,405 - test_audit.py-->line:106] - INFO: 用例--【项目id不存在】---执行通过
2021-02-28 17:25:46,521 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-02-28 17:25:46,633 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-02-28 17:25:46,749 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-02-28 17:25:46,908 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-02-28 17:25:47,088 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-02-28 17:25:47,203 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-02-28 17:25:47,669 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:25:48,033 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:25:48,394 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:25:48,751 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:25:49,110 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:25:49,476 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:25:50,123 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:25:50,124 - test_recharge.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 17:25:50,493 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:25:50,493 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 17:25:50,866 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:25:50,867 - test_recharge.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 83, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-02-28 17:25:51,221 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:25:51,221 - test_recharge.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 17:25:51,582 - test_recharge.py-->line:93] - ERROR: 用例--【title】--失败
2021-02-28 17:25:51,582 - test_recharge.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 84, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-02-28 17:25:51,966 - test_recharge.py-->line:97] - INFO: 用例--【title】--成功
2021-02-28 17:25:52,259 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-02-28 17:25:52,554 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-02-28 17:25:52,798 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-02-28 17:25:53,056 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-02-28 17:25:53,304 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-02-28 17:25:53,541 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-02-28 17:25:53,878 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-02-28 17:25:54,133 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-02-28 17:25:54,377 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-02-28 17:25:54,627 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-02-28 17:25:54,868 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-02-28 17:25:55,111 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-02-28 17:25:55,404 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-02-28 17:25:55,919 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:25:56,271 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:25:56,621 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:25:56,977 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:25:57,328 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:25:57,682 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:25:58,043 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:25:58,043 - test_withdraw.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 84, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-02-28 17:25:58,391 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:25:58,392 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 17:25:58,741 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:25:58,741 - test_withdraw.py-->line:90] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-02-28 17:25:59,115 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:25:59,116 - test_withdraw.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-02-28 17:25:59,503 - test_withdraw.py-->line:89] - ERROR: 用例--【title】--失败
2021-02-28 17:25:59,503 - test_withdraw.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 85, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-02-28 17:25:59,858 - test_withdraw.py-->line:93] - INFO: 用例--【title】--成功
2021-02-28 17:44:31,821 - test_add.py-->line:64] - INFO: 用例--【加标成功】---执行成功
2021-02-28 17:44:32,251 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-02-28 17:44:32,650 - test_add.py-->line:64] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-02-28 17:44:33,060 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-02-28 17:44:33,482 - test_add.py-->line:64] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-02-28 17:44:33,891 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-02-28 17:44:34,286 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-02-28 17:44:34,704 - test_add.py-->line:64] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-02-28 17:44:35,135 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-02-28 17:44:35,560 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-02-28 17:44:35,984 - test_add.py-->line:64] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-02-28 17:45:24,127 - test_audit.py-->line:106] - INFO: 用例--【审核通过】---执行通过
2021-02-28 23:14:35,814 - test_invest.py-->line:49] - INFO: 用例--【投资人id为空】---执行通过
2021-02-28 23:59:34,786 - test_invest.py-->line:43] - ERROR: 用例--【投资人正常投资】---执行失败
2021-02-28 23:59:34,786 - test_invest.py-->line:44] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 40, in test_invest
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2021-02-28 23:59:34,898 - test_invest.py-->line:47] - INFO: 用例--【投资人id为空】---执行通过
2021-02-28 23:59:35,012 - test_invest.py-->line:47] - INFO: 用例--【标id为空】---执行通过
2021-02-28 23:59:35,124 - test_invest.py-->line:43] - ERROR: 用例--【投资金额为空】---执行失败
2021-02-28 23:59:35,125 - test_invest.py-->line:44] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 41, in test_invest
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2021-02-28 23:59:35,244 - test_invest.py-->line:43] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-02-28 23:59:35,245 - test_invest.py-->line:44] - ERROR:  :: 投资金额必须大于100，并且可以被100整除 != 充值金额必须大于100，并且可以被100整除
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 41, in test_invest
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 投资金额必须大于100，并且可以被100整除 != 充值金额必须大于100，并且可以被100整除
2021-02-28 23:59:35,374 - test_invest.py-->line:43] - ERROR: 用例--【投资金额大于可投余额】---执行失败
2021-02-28 23:59:35,375 - test_invest.py-->line:44] - ERROR:  :: 该标可投金额不足 != 该项目不在竞标中状态
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '该标可投金额不足' != '该项目不在竞标中状态'
- 该标可投金额不足
+ 该项目不在竞标中状态


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 41, in test_invest
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 该标可投金额不足 != 该项目不在竞标中状态
2021-03-01 00:03:30,658 - test_add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-01 00:03:31,038 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-01 00:03:31,454 - test_add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-01 00:03:31,859 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-01 00:03:32,240 - test_add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-01 00:03:32,619 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-01 00:03:33,505 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-01 00:03:33,988 - test_add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-01 00:03:34,458 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-01 00:03:35,474 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-01 00:03:35,979 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-01 00:03:36,501 - test_audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-01 00:03:36,831 - test_audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-01 00:03:37,051 - test_audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-01 00:03:37,269 - test_audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-01 00:03:37,490 - test_audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-01 00:03:37,719 - test_audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-01 00:03:38,284 - test_invest.py-->line:43] - ERROR: 用例--【投资人正常投资】---执行失败
2021-03-01 00:03:38,284 - test_invest.py-->line:44] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 40, in test_invest
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2021-03-01 00:03:38,392 - test_invest.py-->line:47] - INFO: 用例--【投资人id为空】---执行通过
2021-03-01 00:03:38,502 - test_invest.py-->line:47] - INFO: 用例--【标id为空】---执行通过
2021-03-01 00:03:38,621 - test_invest.py-->line:43] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-01 00:03:38,622 - test_invest.py-->line:44] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 41, in test_invest
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-01 00:03:38,731 - test_invest.py-->line:43] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-01 00:03:38,732 - test_invest.py-->line:44] - ERROR: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 41, in test_invest
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^

2021-03-01 00:03:38,840 - test_invest.py-->line:43] - ERROR: 用例--【投资金额大于可投余额】---执行失败
2021-03-01 00:03:38,840 - test_invest.py-->line:44] - ERROR: '该标可投金额不足' != '该项目不在竞标中状态'
- 该标可投金额不足
+ 该项目不在竞标中状态
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 41, in test_invest
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '该标可投金额不足' != '该项目不在竞标中状态'
- 该标可投金额不足
+ 该项目不在竞标中状态

2021-03-01 00:03:38,946 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-01 00:03:39,059 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-01 00:03:39,197 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-01 00:03:39,362 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-01 00:03:39,531 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-01 00:03:39,642 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-01 00:03:40,151 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:03:40,542 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:03:40,919 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:03:41,327 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:03:41,713 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:03:42,094 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:03:42,469 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-01 00:03:42,469 - test_recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-01 00:03:42,848 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-01 00:03:42,848 - test_recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-01 00:03:43,220 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-01 00:03:43,220 - test_recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-01 00:03:43,590 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-01 00:03:43,590 - test_recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-01 00:03:43,999 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-01 00:03:44,000 - test_recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-01 00:03:44,400 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:03:44,700 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-01 00:03:45,015 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-01 00:03:45,271 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-01 00:03:45,525 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-01 00:03:45,789 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-01 00:03:46,077 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-01 00:03:46,415 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-01 00:03:46,661 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-01 00:03:46,913 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-01 00:03:47,173 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-01 00:03:47,464 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-01 00:03:47,734 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-01 00:03:48,055 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-01 00:03:48,612 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:03:48,991 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:03:49,402 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:03:49,793 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:03:50,206 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:03:50,611 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:03:50,987 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-01 00:03:50,987 - test_withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-01 00:03:51,366 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-01 00:03:51,366 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-01 00:03:51,754 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-01 00:03:51,754 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-01 00:03:52,143 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-01 00:03:52,144 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-01 00:03:52,533 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-01 00:03:52,534 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-01 00:03:52,969 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:11:17,570 - test_add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-01 00:11:18,057 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-01 00:11:18,475 - test_add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-01 00:11:18,854 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-01 00:11:19,289 - test_add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-01 00:11:19,770 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-01 00:11:20,318 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-01 00:11:20,718 - test_add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-01 00:11:21,127 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-01 00:11:21,530 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-01 00:11:21,945 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-01 00:11:22,602 - test_audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-01 00:11:22,961 - test_audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-01 00:11:23,214 - test_audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-01 00:11:23,448 - test_audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-01 00:11:23,688 - test_audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-01 00:11:23,926 - test_audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-01 00:11:24,543 - test_invest.py-->line:47] - INFO: 用例--【投资人正常投资】---执行通过
2021-03-01 00:11:24,653 - test_invest.py-->line:47] - INFO: 用例--【投资人id为空】---执行通过
2021-03-01 00:11:24,765 - test_invest.py-->line:47] - INFO: 用例--【标id为空】---执行通过
2021-03-01 00:11:24,871 - test_invest.py-->line:43] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-01 00:11:24,872 - test_invest.py-->line:44] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 41, in test_invest
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-01 00:11:24,996 - test_invest.py-->line:43] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-01 00:11:24,998 - test_invest.py-->line:44] - ERROR: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 41, in test_invest
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^

2021-03-01 00:11:25,123 - test_invest.py-->line:43] - ERROR: 用例--【投资金额大于可投余额】---执行失败
2021-03-01 00:11:25,123 - test_invest.py-->line:44] - ERROR: '该标可投金额不足' != '该标可投金额不足,可投金额：1700.0'
- 该标可投金额不足
+ 该标可投金额不足,可投金额：1700.0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 41, in test_invest
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '该标可投金额不足' != '该标可投金额不足,可投金额：1700.0'
- 该标可投金额不足
+ 该标可投金额不足,可投金额：1700.0

2021-03-01 00:11:25,345 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-01 00:11:25,452 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-01 00:11:25,581 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-01 00:11:25,761 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-01 00:11:25,944 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-01 00:11:26,062 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-01 00:11:26,644 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:11:27,047 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:11:27,514 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:11:27,926 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:11:28,396 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:11:28,820 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:11:29,232 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-01 00:11:29,233 - test_recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-01 00:11:29,601 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-01 00:11:29,601 - test_recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-01 00:11:30,001 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-01 00:11:30,002 - test_recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-01 00:11:30,379 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-01 00:11:30,379 - test_recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-01 00:11:30,767 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-01 00:11:30,768 - test_recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-01 00:11:31,165 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-01 00:11:31,469 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-01 00:11:31,770 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-01 00:11:32,022 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-01 00:11:32,281 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-01 00:11:32,546 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-01 00:11:32,810 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-01 00:11:33,131 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-01 00:11:33,390 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-01 00:11:33,643 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-01 00:11:33,917 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-01 00:11:34,185 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-01 00:11:34,439 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-01 00:11:34,739 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-01 00:11:35,284 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:11:35,690 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:11:36,080 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:11:36,456 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:11:36,826 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:11:37,221 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-01 00:11:37,612 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-01 00:11:37,612 - test_withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-01 00:11:37,982 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-01 00:11:37,983 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-01 00:11:38,360 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-01 00:11:38,360 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-01 00:11:38,744 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-01 00:11:38,745 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-01 00:11:39,137 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-01 00:11:39,138 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-01 00:11:39,516 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:03:19,997 - test_add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-02 06:03:20,337 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-02 06:03:20,677 - test_add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-02 06:03:21,025 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-02 06:03:21,376 - test_add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-02 06:03:21,711 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-02 06:03:22,049 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-02 06:03:22,393 - test_add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-02 06:03:22,738 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-02 06:03:23,076 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-02 06:03:23,413 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-02 06:03:23,980 - test_audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-02 06:03:24,293 - test_audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-02 06:03:24,508 - test_audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-02 06:03:24,730 - test_audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-02 06:03:24,942 - test_audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-02 06:03:25,148 - test_audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-02 06:03:26,288 - test_invest.py-->line:73] - ERROR: 用例--【投资人正常投资】---执行失败
2021-03-02 06:03:26,289 - test_invest.py-->line:74] - ERROR: 300 != -300.0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 67, in test_invest
    self.assertEqual(params['amount'],float(e_amount-s_amount))
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 300 != -300.0
2021-03-02 06:03:26,425 - test_invest.py-->line:77] - INFO: 用例--【投资人id为空】---执行通过
2021-03-02 06:03:26,525 - test_invest.py-->line:77] - INFO: 用例--【标id为空】---执行通过
2021-03-02 06:03:26,638 - test_invest.py-->line:73] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-02 06:03:26,639 - test_invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2021-03-02 06:03:26,747 - test_invest.py-->line:73] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-02 06:03:26,747 - test_invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2021-03-02 06:03:26,856 - test_invest.py-->line:77] - INFO: 用例--【投资金额大于可投余额】---执行通过
2021-03-02 06:03:26,998 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-02 06:03:27,107 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-02 06:03:27,206 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-02 06:03:27,352 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-02 06:03:27,500 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-02 06:03:27,602 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-02 06:03:28,053 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:03:28,411 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:03:28,771 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:03:29,144 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:03:29,491 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:03:29,838 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:03:30,188 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:03:30,189 - test_recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 06:03:30,569 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:03:30,570 - test_recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 06:03:30,931 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:03:30,931 - test_recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-02 06:03:31,291 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:03:31,291 - test_recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 06:03:31,666 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:03:31,666 - test_recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 06:03:32,048 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:03:32,332 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-02 06:03:32,617 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-02 06:03:32,853 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-02 06:03:33,101 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-02 06:03:33,340 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-02 06:03:33,591 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-02 06:03:33,874 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-02 06:03:34,137 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-02 06:03:34,379 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-02 06:03:34,611 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-02 06:03:34,852 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-02 06:03:35,104 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-02 06:03:35,381 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-02 06:03:35,898 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:03:36,275 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:03:36,664 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:03:37,064 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:03:37,064 - test_withdraw.py-->line:72] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2021-03-02 06:03:37,475 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:03:37,878 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:03:38,281 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:03:38,281 - test_withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 06:03:38,682 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:03:38,682 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 06:03:39,103 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:03:39,104 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-02 06:03:39,483 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:03:39,483 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 06:03:39,828 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:03:39,828 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 06:03:40,210 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:04:48,371 - test_add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-02 06:04:48,823 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-02 06:04:49,275 - test_add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-02 06:04:49,774 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-02 06:04:50,316 - test_add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-02 06:04:50,761 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-02 06:04:51,206 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-02 06:04:51,647 - test_add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-02 06:04:52,220 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-02 06:04:52,660 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-02 06:04:53,111 - test_add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-02 06:04:53,704 - test_audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-02 06:04:54,019 - test_audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-02 06:04:54,230 - test_audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-02 06:04:54,440 - test_audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-02 06:04:54,652 - test_audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-02 06:04:54,873 - test_audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-02 06:04:56,034 - test_invest.py-->line:77] - INFO: 用例--【投资人正常投资】---执行通过
2021-03-02 06:04:56,141 - test_invest.py-->line:77] - INFO: 用例--【投资人id为空】---执行通过
2021-03-02 06:04:56,249 - test_invest.py-->line:77] - INFO: 用例--【标id为空】---执行通过
2021-03-02 06:04:56,371 - test_invest.py-->line:73] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-02 06:04:56,371 - test_invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2021-03-02 06:04:56,475 - test_invest.py-->line:73] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-02 06:04:56,475 - test_invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2021-03-02 06:04:56,587 - test_invest.py-->line:77] - INFO: 用例--【投资金额大于可投余额】---执行通过
2021-03-02 06:04:56,743 - test_login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-02 06:04:56,850 - test_login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-02 06:04:56,957 - test_login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-02 06:04:57,137 - test_login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-02 06:04:57,291 - test_login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-02 06:04:57,409 - test_login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-02 06:04:57,938 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:04:58,337 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:04:58,712 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:04:59,087 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:04:59,444 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:04:59,788 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:05:00,144 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:05:00,145 - test_recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 06:05:00,501 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:05:00,502 - test_recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 06:05:00,884 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:05:00,885 - test_recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-02 06:05:01,256 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:05:01,256 - test_recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 06:05:01,626 - test_recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:05:01,626 - test_recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 06:05:01,998 - test_recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:05:02,353 - test_register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-02 06:05:02,685 - test_register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-02 06:05:02,945 - test_register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-02 06:05:03,192 - test_register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-02 06:05:03,454 - test_register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-02 06:05:03,692 - test_register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-02 06:05:04,018 - test_register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-02 06:05:04,288 - test_register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-02 06:05:04,542 - test_register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-02 06:05:04,795 - test_register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-02 06:05:05,050 - test_register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-02 06:05:05,312 - test_register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-02 06:05:05,609 - test_register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-02 06:05:06,163 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:05:06,612 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:05:07,036 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:05:07,404 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:05:07,779 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:05:08,135 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:05:08,519 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:05:08,519 - test_withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 06:05:08,939 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:05:08,940 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 06:05:09,339 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:05:09,340 - test_withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-02 06:05:09,750 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:05:09,750 - test_withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 06:05:10,169 - test_withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:05:10,170 - test_withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 06:05:10,518 - test_withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:11:44,999 - test_01register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-02 06:11:45,349 - test_01register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-02 06:11:45,627 - test_01register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-02 06:11:45,908 - test_01register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-02 06:11:46,165 - test_01register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-02 06:11:46,430 - test_01register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-02 06:11:46,717 - test_01register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-02 06:11:46,985 - test_01register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-02 06:11:47,251 - test_01register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-02 06:11:47,521 - test_01register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-02 06:11:47,789 - test_01register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-02 06:11:48,033 - test_01register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-02 06:11:48,350 - test_01register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-02 06:11:48,499 - test_02login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-02 06:11:48,611 - test_02login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-02 06:11:48,721 - test_02login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-02 06:11:48,871 - test_02login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-02 06:11:49,042 - test_02login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-02 06:11:49,155 - test_02login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-02 06:11:49,645 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:11:50,004 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:11:50,394 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:11:50,759 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:11:51,134 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:11:51,500 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:11:51,894 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:11:51,896 - test_03recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 06:11:52,293 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:11:52,294 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 06:11:52,671 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:11:52,672 - test_03recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-02 06:11:53,033 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:11:53,034 - test_03recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 06:11:53,408 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 06:11:53,410 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 06:11:53,795 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 06:11:54,311 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:11:54,685 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:11:55,051 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:11:55,413 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:11:55,774 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:11:56,130 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:11:56,488 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:11:56,489 - test_04withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 06:11:56,849 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:11:56,850 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 06:11:57,208 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:11:57,209 - test_04withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-02 06:11:57,572 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:11:57,573 - test_04withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 06:11:57,942 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 06:11:57,943 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 06:11:58,307 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 06:11:58,873 - test_05add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-02 06:11:59,300 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-02 06:11:59,676 - test_05add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-02 06:12:00,095 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-02 06:12:00,536 - test_05add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-02 06:12:00,926 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-02 06:12:01,275 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-02 06:12:01,617 - test_05add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-02 06:12:01,958 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-02 06:12:02,289 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-02 06:12:02,616 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-02 06:12:03,165 - test_06audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-02 06:12:03,474 - test_06audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-02 06:12:03,685 - test_06audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-02 06:12:03,890 - test_06audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-02 06:12:04,102 - test_06audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-02 06:12:04,320 - test_06audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-02 06:12:05,463 - test_07invest.py-->line:77] - INFO: 用例--【投资人正常投资】---执行通过
2021-03-02 06:12:05,569 - test_07invest.py-->line:77] - INFO: 用例--【投资人id为空】---执行通过
2021-03-02 06:12:05,673 - test_07invest.py-->line:77] - INFO: 用例--【标id为空】---执行通过
2021-03-02 06:12:05,778 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-02 06:12:05,779 - test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2021-03-02 06:12:05,887 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-02 06:12:05,887 - test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2021-03-02 06:12:05,996 - test_07invest.py-->line:77] - INFO: 用例--【投资金额大于可投余额】---执行通过
2021-03-02 22:06:15,207 - test_01register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-02 22:06:15,760 - test_01register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-02 22:06:16,013 - test_01register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-02 22:06:16,280 - test_01register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-02 22:06:16,811 - test_01register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-02 22:06:17,075 - test_01register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-02 22:06:17,369 - test_01register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-02 22:06:17,624 - test_01register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-02 22:06:18,123 - test_01register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-02 22:06:18,380 - test_01register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-02 22:06:18,672 - test_01register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-02 22:06:18,934 - test_01register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-02 22:06:19,236 - test_01register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-02 22:06:19,394 - test_02login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-02 22:06:19,516 - test_02login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-02 22:06:19,635 - test_02login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-02 22:06:19,775 - test_02login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-02 22:06:19,933 - test_02login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-02 22:06:20,041 - test_02login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-02 22:06:20,508 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:06:20,889 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:06:21,263 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:06:21,669 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:06:22,116 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:06:22,510 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:06:22,972 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:06:22,972 - test_03recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:06:23,380 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:06:23,380 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:06:23,756 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:06:23,756 - test_03recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-02 22:06:24,148 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:06:24,148 - test_03recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:06:24,533 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:06:24,534 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:06:24,903 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:06:25,496 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:06:25,884 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:06:26,263 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:06:26,660 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:06:27,061 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:06:27,424 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:06:27,794 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:06:27,794 - test_04withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:06:28,159 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:06:28,159 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:06:28,546 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:06:28,547 - test_04withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-02 22:06:28,926 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:06:28,927 - test_04withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:06:29,321 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:06:29,321 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:06:29,963 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:06:30,526 - test_05add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-02 22:06:30,918 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-02 22:06:31,297 - test_05add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-02 22:06:31,661 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-02 22:06:32,052 - test_05add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-02 22:06:32,513 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-02 22:06:33,182 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-02 22:06:33,595 - test_05add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-02 22:06:33,989 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-02 22:06:34,369 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-02 22:06:34,783 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-02 22:06:35,518 - test_06audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-02 22:06:35,890 - test_06audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-02 22:06:36,153 - test_06audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-02 22:06:36,411 - test_06audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-02 22:06:37,699 - test_06audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-02 22:06:38,154 - test_06audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-02 22:06:39,746 - test_07invest.py-->line:77] - INFO: 用例--【投资人正常投资】---执行通过
2021-03-02 22:06:39,861 - test_07invest.py-->line:77] - INFO: 用例--【投资人id为空】---执行通过
2021-03-02 22:06:39,984 - test_07invest.py-->line:77] - INFO: 用例--【标id为空】---执行通过
2021-03-02 22:06:40,098 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-02 22:06:40,098 - test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2021-03-02 22:06:40,237 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-02 22:06:40,238 - test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2021-03-02 22:06:40,346 - test_07invest.py-->line:77] - INFO: 用例--【投资金额大于可投余额】---执行通过
2021-03-02 22:07:22,352 - test_01register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-02 22:07:22,663 - test_01register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-02 22:07:23,923 - test_01register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-02 22:07:24,180 - test_01register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-02 22:07:24,436 - test_01register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-02 22:07:24,687 - test_01register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-02 22:07:25,051 - test_01register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-02 22:07:25,316 - test_01register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-02 22:07:25,561 - test_01register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-02 22:07:25,856 - test_01register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-02 22:07:29,458 - test_01register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-02 22:07:29,714 - test_01register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-02 22:07:30,032 - test_01register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-02 22:07:30,184 - test_02login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-02 22:07:30,292 - test_02login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-02 22:07:30,421 - test_02login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-02 22:07:30,571 - test_02login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-02 22:07:30,720 - test_02login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-02 22:07:30,836 - test_02login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-02 22:07:32,437 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:07:32,827 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:07:33,496 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:07:34,157 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:07:34,555 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:07:34,946 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:07:35,635 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:07:35,635 - test_03recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:07:36,024 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:07:36,024 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:07:36,397 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:07:36,398 - test_03recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-02 22:07:36,793 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:07:36,793 - test_03recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:07:37,185 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:07:37,185 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:07:37,854 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:07:39,424 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:07:39,834 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:07:40,226 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:07:40,617 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:07:41,001 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:07:41,421 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:07:41,833 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:07:41,834 - test_04withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:07:42,200 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:07:42,201 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:07:42,571 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:07:42,571 - test_04withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-02 22:07:42,960 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:07:42,960 - test_04withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:07:43,363 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:07:43,364 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:07:43,729 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:07:44,327 - test_05add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-02 22:07:44,732 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-02 22:07:45,127 - test_05add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-02 22:07:47,311 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-02 22:07:47,682 - test_05add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-02 22:07:48,417 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-02 22:07:49,561 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-02 22:07:51,223 - test_05add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-02 22:07:51,810 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-02 22:07:52,293 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-02 22:07:54,842 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-02 22:07:55,511 - test_06audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-02 22:07:55,864 - test_06audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-02 22:07:56,125 - test_06audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-02 22:07:56,355 - test_06audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-02 22:07:56,591 - test_06audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-02 22:07:56,840 - test_06audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-02 22:07:58,229 - test_07invest.py-->line:77] - INFO: 用例--【投资人正常投资】---执行通过
2021-03-02 22:07:58,347 - test_07invest.py-->line:77] - INFO: 用例--【投资人id为空】---执行通过
2021-03-02 22:07:58,452 - test_07invest.py-->line:77] - INFO: 用例--【标id为空】---执行通过
2021-03-02 22:07:58,562 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-02 22:07:58,562 - test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2021-03-02 22:07:58,674 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-02 22:07:58,674 - test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2021-03-02 22:07:58,781 - test_07invest.py-->line:77] - INFO: 用例--【投资金额大于可投余额】---执行通过
2021-03-02 22:09:23,193 - test_01register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-02 22:09:23,509 - test_01register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-02 22:09:23,765 - test_01register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-02 22:09:24,026 - test_01register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-02 22:09:24,279 - test_01register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-02 22:09:28,686 - test_01register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-02 22:09:29,325 - test_01register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-02 22:09:30,393 - test_01register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-02 22:09:30,664 - test_01register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-02 22:09:30,933 - test_01register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-02 22:09:31,211 - test_01register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-02 22:09:31,754 - test_01register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-02 22:09:32,044 - test_01register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-02 22:09:32,201 - test_02login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-02 22:09:32,318 - test_02login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-02 22:09:33,425 - test_02login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-02 22:09:33,583 - test_02login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-02 22:09:33,767 - test_02login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-02 22:09:33,885 - test_02login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-02 22:09:34,425 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:09:34,806 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:09:35,179 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:09:35,564 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:09:35,955 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:09:36,342 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:09:36,718 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:09:36,718 - test_03recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:09:37,157 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:09:37,157 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:09:37,566 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:09:37,566 - test_03recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-02 22:09:37,932 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:09:37,933 - test_03recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:09:38,365 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:09:38,365 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:09:38,773 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:09:39,297 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:09:39,672 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:09:40,062 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:09:40,472 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:09:40,888 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:09:41,341 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:09:41,743 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:09:41,743 - test_04withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:09:42,125 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:09:42,125 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:09:42,513 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:09:42,514 - test_04withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-02 22:09:42,918 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:09:42,919 - test_04withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:09:43,371 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:09:43,371 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:09:43,746 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:09:44,326 - test_05add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-02 22:09:44,694 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-02 22:09:45,069 - test_05add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-02 22:09:45,474 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-02 22:09:45,840 - test_05add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-02 22:09:46,185 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-02 22:09:46,549 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-02 22:09:46,920 - test_05add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-02 22:09:47,294 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-02 22:09:48,426 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-02 22:09:48,808 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-02 22:09:49,426 - test_06audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-02 22:09:49,752 - test_06audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-02 22:09:49,971 - test_06audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-02 22:09:50,199 - test_06audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-02 22:09:50,419 - test_06audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-02 22:09:50,655 - test_06audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-02 22:09:54,113 - test_07invest.py-->line:77] - INFO: 用例--【投资人正常投资】---执行通过
2021-03-02 22:09:54,215 - test_07invest.py-->line:77] - INFO: 用例--【投资人id为空】---执行通过
2021-03-02 22:09:54,322 - test_07invest.py-->line:77] - INFO: 用例--【标id为空】---执行通过
2021-03-02 22:09:54,443 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-02 22:09:54,443 - test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2021-03-02 22:09:54,556 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-02 22:09:54,556 - test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2021-03-02 22:09:54,673 - test_07invest.py-->line:77] - INFO: 用例--【投资金额大于可投余额】---执行通过
2021-03-02 22:16:14,732 - test_01register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-02 22:16:17,194 - test_01register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-02 22:16:17,803 - test_01register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-02 22:16:18,110 - test_01register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-02 22:16:18,461 - test_01register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-02 22:16:18,769 - test_01register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-02 22:16:19,102 - test_01register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-02 22:16:19,392 - test_01register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-02 22:16:19,701 - test_01register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-02 22:16:19,951 - test_01register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-02 22:16:20,202 - test_01register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-02 22:16:20,533 - test_01register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-02 22:16:20,970 - test_01register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-02 22:16:21,139 - test_02login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-02 22:16:21,282 - test_02login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-02 22:16:21,402 - test_02login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-02 22:16:21,549 - test_02login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-02 22:16:21,770 - test_02login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-02 22:16:21,885 - test_02login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-02 22:16:22,403 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:16:22,962 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:16:23,479 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:16:23,917 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:16:24,356 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:16:24,797 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:16:25,449 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:16:25,449 - test_03recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:16:26,477 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:16:26,477 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:16:27,065 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:16:27,066 - test_03recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-02 22:16:27,513 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:16:27,513 - test_03recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:16:27,965 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:16:27,965 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:16:28,394 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:16:29,050 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:16:29,546 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:16:30,025 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:16:31,459 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:16:31,896 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:16:33,104 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:16:34,540 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:16:34,540 - test_04withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:16:35,027 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:16:35,027 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:16:35,876 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:16:35,876 - test_04withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-02 22:16:36,278 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:16:36,278 - test_04withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:16:36,777 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:16:36,777 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:16:37,550 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:16:39,083 - test_05add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-02 22:16:39,863 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-02 22:16:41,105 - test_05add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-02 22:16:42,884 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-02 22:16:47,595 - test_05add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-02 22:16:48,220 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-02 22:16:50,567 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-02 22:16:51,289 - test_05add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-02 22:16:52,153 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-02 22:16:52,969 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-02 22:16:53,725 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-02 22:16:54,856 - test_06audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-02 22:16:55,183 - test_06audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-02 22:16:55,404 - test_06audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-02 22:16:55,658 - test_06audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-02 22:16:55,940 - test_06audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-02 22:16:56,186 - test_06audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-02 22:16:58,066 - test_07invest.py-->line:77] - INFO: 用例--【投资人正常投资】---执行通过
2021-03-02 22:16:58,527 - test_07invest.py-->line:77] - INFO: 用例--【投资人id为空】---执行通过
2021-03-02 22:16:58,653 - test_07invest.py-->line:77] - INFO: 用例--【标id为空】---执行通过
2021-03-02 22:16:58,784 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-02 22:16:58,784 - test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2021-03-02 22:16:58,933 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-02 22:16:58,934 - test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2021-03-02 22:16:59,166 - test_07invest.py-->line:77] - INFO: 用例--【投资金额大于可投余额】---执行通过
2021-03-02 22:28:59,536 - test_01register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-02 22:28:59,848 - test_01register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-02 22:29:00,112 - test_01register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-02 22:29:00,353 - test_01register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-02 22:29:00,611 - test_01register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-02 22:29:00,868 - test_01register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-02 22:29:01,156 - test_01register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-02 22:29:01,400 - test_01register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-02 22:29:01,669 - test_01register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-02 22:29:01,941 - test_01register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-02 22:29:02,195 - test_01register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-02 22:29:02,437 - test_01register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-02 22:29:03,016 - test_01register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-02 22:29:03,194 - test_02login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-02 22:29:03,309 - test_02login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-02 22:29:03,433 - test_02login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-02 22:29:03,584 - test_02login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-02 22:29:03,729 - test_02login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-02 22:29:03,838 - test_02login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-02 22:29:04,397 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:29:04,759 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:29:05,918 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:29:06,276 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:29:06,637 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:29:07,017 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:29:07,679 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:29:07,680 - test_03recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:29:08,349 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:29:08,349 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:29:08,720 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:29:08,720 - test_03recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-02 22:29:09,087 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:29:09,088 - test_03recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:29:09,471 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:29:09,472 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:29:09,865 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:29:11,392 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:29:13,159 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:29:13,570 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:29:14,009 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:29:14,448 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:29:14,878 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:29:15,578 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:29:15,578 - test_04withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:29:16,009 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:29:16,010 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:29:16,793 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:29:16,794 - test_04withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-02 22:29:17,259 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:29:17,259 - test_04withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:29:17,965 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:29:17,965 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:29:18,385 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:29:19,093 - test_05add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-02 22:29:19,461 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-02 22:29:19,823 - test_05add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-02 22:29:20,201 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-02 22:29:20,582 - test_05add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-02 22:29:20,970 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-02 22:29:21,345 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-02 22:29:21,719 - test_05add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-02 22:29:22,102 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-02 22:29:22,553 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-02 22:29:22,989 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-02 22:29:23,783 - test_06audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-02 22:29:24,185 - test_06audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-02 22:29:25,430 - test_06audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-02 22:29:25,777 - test_06audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-02 22:29:26,373 - test_06audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-02 22:29:26,727 - test_06audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-02 22:29:28,549 - test_07invest.py-->line:77] - INFO: 用例--【投资人正常投资】---执行通过
2021-03-02 22:29:28,673 - test_07invest.py-->line:77] - INFO: 用例--【投资人id为空】---执行通过
2021-03-02 22:29:28,803 - test_07invest.py-->line:77] - INFO: 用例--【标id为空】---执行通过
2021-03-02 22:29:28,923 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-02 22:29:28,924 - test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2021-03-02 22:29:29,045 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-02 22:29:29,045 - test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2021-03-02 22:29:29,167 - test_07invest.py-->line:77] - INFO: 用例--【投资金额大于可投余额】---执行通过
2021-03-02 22:32:15,944 - test_01register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-02 22:32:16,303 - test_01register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-02 22:32:16,584 - test_01register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-02 22:32:17,149 - test_01register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-02 22:32:20,292 - test_01register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-02 22:32:20,877 - test_01register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-02 22:32:21,777 - test_01register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-02 22:32:22,069 - test_01register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-02 22:32:22,360 - test_01register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-02 22:32:23,826 - test_01register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-02 22:32:24,368 - test_01register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-02 22:32:24,624 - test_01register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-02 22:32:24,974 - test_01register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-02 22:32:25,161 - test_02login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-02 22:32:25,293 - test_02login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-02 22:32:25,410 - test_02login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-02 22:32:25,598 - test_02login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-02 22:32:25,768 - test_02login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-02 22:32:25,885 - test_02login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-02 22:32:26,434 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:32:27,086 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:32:27,493 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:32:28,923 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:32:29,590 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:32:30,050 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:32:30,459 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:32:30,459 - test_03recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:32:37,039 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:32:37,039 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:32:38,466 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:32:38,466 - test_03recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-02 22:32:38,894 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:32:38,894 - test_03recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:32:39,381 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-02 22:32:39,381 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-02 22:32:39,784 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-02 22:32:40,345 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:32:40,750 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:32:42,391 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:32:42,923 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:32:43,311 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:32:43,668 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:32:44,138 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:32:44,138 - test_04withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-02 22:32:45,554 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:32:45,554 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:32:46,076 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:32:46,077 - test_04withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-02 22:32:46,559 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:32:46,560 - test_04withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-02 22:32:46,949 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-02 22:32:46,949 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-02 22:32:47,332 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-02 22:32:47,952 - test_05add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-02 22:32:48,370 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-02 22:32:48,792 - test_05add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-02 22:32:49,190 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-02 22:32:49,576 - test_05add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-02 22:32:49,973 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-02 22:32:51,319 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-02 22:32:51,759 - test_05add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-02 22:32:52,227 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-02 22:32:52,701 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-02 22:32:53,431 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-02 22:32:55,026 - test_06audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-02 22:32:58,181 - test_06audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-02 22:32:58,415 - test_06audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-02 22:32:58,662 - test_06audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-02 22:32:58,895 - test_06audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-02 22:32:59,131 - test_06audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-02 22:33:00,592 - test_07invest.py-->line:77] - INFO: 用例--【投资人正常投资】---执行通过
2021-03-02 22:33:00,738 - test_07invest.py-->line:77] - INFO: 用例--【投资人id为空】---执行通过
2021-03-02 22:33:00,872 - test_07invest.py-->line:77] - INFO: 用例--【标id为空】---执行通过
2021-03-02 22:33:03,247 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-02 22:33:03,248 - test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2021-03-02 22:33:03,371 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-02 22:33:03,372 - test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2021-03-02 22:33:03,850 - test_07invest.py-->line:77] - INFO: 用例--【投资金额大于可投余额】---执行通过
2021-03-06 11:58:09,787 - test_01register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-06 11:58:10,109 - test_01register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-06 11:58:10,367 - test_01register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-06 11:58:10,621 - test_01register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-06 11:58:10,879 - test_01register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-06 11:58:11,141 - test_01register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-06 11:58:11,465 - test_01register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-06 11:58:11,734 - test_01register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-06 11:58:11,990 - test_01register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-06 11:58:12,263 - test_01register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-06 11:58:12,520 - test_01register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-06 11:58:12,800 - test_01register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-06 11:58:14,131 - test_01register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-06 11:58:14,294 - test_02login.py-->line:37] - INFO: 用例---【登录成功】---执行通过
2021-03-06 11:58:14,399 - test_02login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-06 11:58:14,509 - test_02login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-06 11:58:14,682 - test_02login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-06 11:58:14,856 - test_02login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-06 11:58:14,959 - test_02login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
2021-03-06 11:58:15,461 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-06 11:58:15,854 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-06 11:58:16,272 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-06 11:58:16,679 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-06 11:58:17,108 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-06 11:58:17,484 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-06 11:58:17,861 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-06 11:58:17,862 - test_03recharge.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-06 11:58:18,249 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-06 11:58:18,250 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-06 11:58:18,633 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-06 11:58:18,633 - test_03recharge.py-->line:76] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2021-03-06 11:58:19,004 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-06 11:58:19,004 - test_03recharge.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-06 11:58:19,400 - test_03recharge.py-->line:75] - ERROR: 用例--【title】--失败
2021-03-06 11:58:19,400 - test_03recharge.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_03recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2021-03-06 11:58:19,797 - test_03recharge.py-->line:79] - INFO: 用例--【title】--成功
2021-03-06 11:58:20,349 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-06 11:58:20,743 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-06 11:58:21,127 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-06 11:58:21,541 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-06 11:58:21,934 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-06 11:58:22,332 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-06 11:58:22,719 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-06 11:58:22,720 - test_04withdraw.py-->line:72] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2021-03-06 11:58:23,153 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-06 11:58:23,153 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-06 11:58:23,561 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-06 11:58:23,561 - test_04withdraw.py-->line:72] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2021-03-06 11:58:23,949 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-06 11:58:23,949 - test_04withdraw.py-->line:72] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2021-03-06 11:58:24,360 - test_04withdraw.py-->line:71] - ERROR: 用例--【title】--失败
2021-03-06 11:58:24,360 - test_04withdraw.py-->line:72] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2021-03-06 11:58:24,751 - test_04withdraw.py-->line:75] - INFO: 用例--【title】--成功
2021-03-06 11:58:25,390 - test_05add.py-->line:55] - INFO: 用例--【加标成功】---执行成功
2021-03-06 11:58:25,826 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2021-03-06 11:58:26,234 - test_05add.py-->line:55] - INFO: 用例--【加标失败—标题为空】---执行成功
2021-03-06 11:58:26,651 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2021-03-06 11:58:27,019 - test_05add.py-->line:55] - INFO: 用例--【加标失败—年利率为空】---执行成功
2021-03-06 11:58:27,404 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2021-03-06 11:58:27,753 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2021-03-06 11:58:28,101 - test_05add.py-->line:55] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2021-03-06 11:58:28,454 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2021-03-06 11:58:28,827 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2021-03-06 11:58:29,191 - test_05add.py-->line:55] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2021-03-06 11:58:29,807 - test_06audit.py-->line:70] - INFO: 用例--【审核通过】---执行通过
2021-03-06 11:58:30,146 - test_06audit.py-->line:70] - INFO: 用例--【审核不通过】---执行通过
2021-03-06 11:58:30,377 - test_06audit.py-->line:70] - INFO: 用例--【项目不待审核状态】---执行通过
2021-03-06 11:58:30,597 - test_06audit.py-->line:70] - INFO: 用例--【参数approved_or_not为空】---执行通过
2021-03-06 11:58:30,815 - test_06audit.py-->line:70] - INFO: 用例--【项目id为空】---执行通过
2021-03-06 11:58:31,043 - test_06audit.py-->line:70] - INFO: 用例--【项目id不存在】---执行通过
2021-03-06 11:58:32,268 - test_07invest.py-->line:77] - INFO: 用例--【投资人正常投资】---执行通过
2021-03-06 11:58:32,381 - test_07invest.py-->line:77] - INFO: 用例--【投资人id为空】---执行通过
2021-03-06 11:58:32,493 - test_07invest.py-->line:77] - INFO: 用例--【标id为空】---执行通过
2021-03-06 11:58:32,601 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为空】---执行失败
2021-03-06 11:58:32,602 - test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2021-03-06 11:58:32,744 - test_07invest.py-->line:73] - ERROR: 用例--【投资金额为非100的整数倍】---执行失败
2021-03-06 11:58:32,744 - test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "E:\pywork_space\py35_17_project1\testcases\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\Python37\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2021-03-06 11:58:32,861 - test_07invest.py-->line:77] - INFO: 用例--【投资金额大于可投余额】---执行通过
2021-03-13 09:59:04,495 - test_01register.py-->line:67] - INFO: 用例---【注册成功-带注册名】---执行通过
2021-03-13 09:59:04,881 - test_01register.py-->line:67] - INFO: 用例---【成功-不带用户名】---执行通过
2021-03-13 09:59:05,154 - test_01register.py-->line:67] - INFO: 用例---【不输入手机号】---执行通过
2021-03-13 09:59:05,413 - test_01register.py-->line:67] - INFO: 用例---【手机号长度10位】---执行通过
2021-03-13 09:59:05,705 - test_01register.py-->line:67] - INFO: 用例---【手机号长度12位】---执行通过
2021-03-13 09:59:05,960 - test_01register.py-->line:67] - INFO: 用例---【手机号含有非法字符】---执行通过
2021-03-13 09:59:06,293 - test_01register.py-->line:67] - INFO: 用例---【已注册过的手机号】---执行通过
2021-03-13 09:59:06,573 - test_01register.py-->line:67] - INFO: 用例---【密码7位】---执行通过
2021-03-13 09:59:06,850 - test_01register.py-->line:67] - INFO: 用例---【密码17位】---执行通过
2021-03-13 09:59:07,133 - test_01register.py-->line:67] - INFO: 用例---【不输入密码】---执行通过
2021-03-13 09:59:07,387 - test_01register.py-->line:67] - INFO: 用例---【注册名11位】---执行通过
2021-03-13 09:59:07,664 - test_01register.py-->line:67] - INFO: 用例---【类型输入非0，1内容】---执行通过
2021-03-13 09:59:08,083 - test_01register.py-->line:67] - INFO: 用例---【不输入类型】---执行通过
2021-03-13 09:59:08,264 - test_02login.py-->line:33] - ERROR: 用例---【登录成功】---执行失败
2021-03-13 09:59:08,455 - test_02login.py-->line:37] - INFO: 用例---【手机号为空】---执行通过
2021-03-13 09:59:08,609 - test_02login.py-->line:37] - INFO: 用例---【密码为空】---执行通过
2021-03-13 09:59:08,833 - test_02login.py-->line:37] - INFO: 用例---【手机号未注册】---执行通过
2021-03-13 09:59:09,031 - test_02login.py-->line:37] - INFO: 用例---【密码错误】---执行通过
2021-03-13 09:59:09,152 - test_02login.py-->line:37] - INFO: 用例---【手机号格式错误】---执行通过
